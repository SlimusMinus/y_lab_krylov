2024-08-01 23:38:27,721 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 10:01:33,308 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=0, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 10:05:54,564 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login sdd and password sdvsd
2024-08-02 10:16:09,476 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login сыс and password ыс
2024-08-02 10:19:23,279 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login dfbdb and password fdbfd
2024-08-02 10:20:13,826 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login sdcdsc and password sdvs
2024-08-02 11:36:48,416 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login client1 and password client2
2024-08-02 12:07:44,478 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:07:44,485 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:08:54,453 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:08:54,461 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:12:28,035 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:12:28,042 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:12:41,791 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:14:48,943 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login dfvsdv and password sdvwes
2024-08-02 12:18:39,733 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:18:39,742 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:18:44,778 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:18:51,810 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:19:34,702 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:19:34,709 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:19:44,801 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:21:47,564 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:21:47,564 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:22:16,716 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:26 - Car Car(id=0, brand=Volvo, model=s69, year=205, price=20587.0, condition=good) added
2024-08-02 12:22:26,424 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:22:39,338 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:22:39,339 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:23:58,267 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:24:18,206 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:31 - Car Car(id=7, brand=Mazda, model=CX-7, year=558, price=5897.0, condition=Cool) updated
2024-08-02 12:24:27,479 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:24:35,063 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:24:35,065 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:24:49,519 INFO  org.example.service.AuthServiceImpl.delete:39 - Car with id - 5 removed
2024-08-02 12:24:53,429 INFO  org.example.service.AuthServiceImpl.getAll:19 - Get all cars
2024-08-02 12:57:40,228 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login dmin and password admin
2024-08-02 12:58:03,016 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:58:03,022 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:58:10,198 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 12:59:13,081 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:59:13,089 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 12:59:17,864 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:01:11,819 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=0, date=2024-08-02, car=Car(id=0, brand=Volva, model=s40, year=125, price=4588.0, condition=good), user=User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор), status=order created) is created
2024-08-02 13:01:36,179 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:04:04,742 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 13:04:04,750 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 13:04:09,693 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:04:23,400 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:04:23,401 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:04:40,381 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on готов, repository order with 1 id
2024-08-02 13:04:43,881 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:04:56,511 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:04:56,512 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:05:00,974 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on к, repository order with 1 id
2024-08-02 13:05:16,092 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:05:16,093 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:05:19,541 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on выдаче, repository order with 1 id
2024-08-02 13:05:38,506 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:07:37,508 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:07:37,509 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 13:07:40,122 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 1 id is canceled
2024-08-02 13:07:44,810 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-02 15:23:42,016 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:23:42,024 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:23:49,103 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:25:16,905 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:25:16,912 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:34:28,893 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:36:04,630 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:36:04,637 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:36:11,235 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:36:45,601 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-02 15:36:54,889 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-02 15:36:54,890 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:36:54,891 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:38:32,384 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login фвьшт and password фвы
2024-08-02 15:38:42,146 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:38:42,151 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:38:50,056 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-02 15:39:02,021 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:39:02,022 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:39:11,032 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:40:40,075 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:40:40,082 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор) is logging
2024-08-02 15:40:43,869 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:40:43,870 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:40:47,073 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:41:28,107 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=6, login=client7, password=asasc, name=Tanya, age=77, city=Иркутск, role=Клиент) user was changed
2024-08-02 15:41:35,671 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-02 15:42:45,732 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=sdvs, password=sdvds, name=sdsvsd, age=11, city=sdcsdv, role=Клиент) added
2024-08-02 15:47:07,294 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login csac and password ascsac
2024-08-02 15:47:14,452 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login dssdv and password sdvsdv
2024-08-02 15:47:42,972 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=ascasc, password=sacsac, name=sdcdsc, age=2, city=sdvdsv, role=Клиент) added
2024-08-02 16:17:40,975 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-02 16:17:40,983 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-02 16:17:48,010 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 12:08:40,969 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:11:05,910 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:12:20,234 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:12:20,270 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:15:15,739 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:15:15,778 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:18:25,208 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:18:25,251 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:21:44,671 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:22:58,705 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:23:18,356 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:24:50,026 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:26:15,185 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:28:52,862 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:29:55,397 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:31:56,056 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:31:56,064 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:32:04,415 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:32:04,424 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:34:37,151 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 12:34:37,161 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:34:47,684 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 12:34:47,693 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:35:16,595 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:35:16,604 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:35:16,605 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:35:24,207 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=New) added
2024-08-03 12:35:24,216 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:35:24,218 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:36:59,960 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:36:59,963 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:37:36,495 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:37:36,498 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:39:22,969 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:39:22,972 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:40:28,172 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:40:28,176 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 12:43:43,887 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:43:52,911 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:44:00,363 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 12:50:11,254 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:53:40,066 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:53:40,072 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:56:14,464 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:56:14,468 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:56:14,469 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:58:25,911 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:58:25,915 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 12:58:25,916 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:03:02,033 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 13:03:02,042 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 13:03:07,432 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:03:07,438 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:06:35,185 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 13:06:35,220 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:06:35,222 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:06:35,223 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:06:35,255 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:06:35,256 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:06:35,259 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:06:35,259 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:06:35,262 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:06:35,263 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:06:35,264 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:06:55,616 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:06:55,620 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:06:55,621 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:12,316 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 13:07:12,362 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:12,364 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:12,365 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:12,398 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:12,399 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:12,403 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:07:12,403 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:12,406 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:07:12,406 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:12,406 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:40,495 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 13:07:40,551 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:40,553 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:40,554 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:07:40,585 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:40,585 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:40,589 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:07:40,589 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:40,593 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:07:40,593 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:07:40,594 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:09:15,862 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 13:09:15,907 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:09:15,909 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:09:15,910 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:09:15,941 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:09:15,942 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:09:15,945 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:09:15,946 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:09:15,949 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:09:15,950 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:09:15,950 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:10:30,635 INFO  org.example.service.AuthServiceImpl.delete:38 - Car with id - 1 removed
2024-08-03 13:10:30,679 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:10:30,682 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:10:30,683 INFO  org.example.service.AuthServiceImpl.filter:44 - Get all find cars
2024-08-03 13:10:30,721 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:10:30,721 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:10:30,725 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:30 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:10:30,726 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:10:30,729 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:25 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:10:30,730 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:10:30,730 INFO  org.example.service.AuthServiceImpl.getAll:18 - Get all cars
2024-08-03 13:23:32,233 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:23:32,295 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:23:32,297 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:23:32,298 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:23:32,319 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:23:32,320 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:23:32,323 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:23:32,324 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:23:32,326 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:23:32,326 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:23:32,326 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:16,563 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:28:16,608 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:28:16,610 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:28:16,611 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:28:16,649 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:16,649 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:16,654 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:28:16,655 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:16,658 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:28:16,658 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:16,658 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:37,568 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:28:37,576 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:42,334 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:28:42,338 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:28:42,338 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:28:47,610 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:28:47,648 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:32:20,509 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:32:20,553 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:32:20,556 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:32:20,558 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:32:20,590 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:32:20,591 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:32:20,595 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:32:20,595 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:32:20,598 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:32:20,598 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:32:20,598 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:33:51,537 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:33:51,584 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:33:51,586 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:33:51,587 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:33:51,598 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:33:51,599 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:33:51,601 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:33:51,610 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:33:51,612 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:33:51,612 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:33:51,613 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:34:37,875 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:34:37,925 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:34:37,927 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:34:37,928 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:34:37,938 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:34:37,938 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:34:37,941 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:34:37,947 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:34:37,949 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:34:37,950 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:34:37,950 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:35:02,626 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:35:02,669 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:35:02,672 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:35:02,672 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:35:02,684 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:35:02,684 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:35:02,687 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:35:02,693 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:35:02,695 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:35:02,696 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:35:02,696 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:08,813 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:38:08,857 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:38:08,859 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:38:08,860 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:38:08,870 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:08,870 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:08,872 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:38:08,885 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:38:43,629 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:38:43,670 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:38:43,672 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:38:43,673 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:38:43,683 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:43,683 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:43,685 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:38:43,692 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:43,694 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:38:43,695 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:38:43,695 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:39:21,615 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 13:39:21,665 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:39:21,667 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:39:21,668 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 13:39:21,679 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:39:21,679 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:39:21,682 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 13:39:21,688 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:39:21,690 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 13:39:21,690 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:39:21,690 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 13:46:50,622 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 13:48:38,791 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 14:54:00,554 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 14:54:00,592 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 14:56:12,906 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 14:56:12,958 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 14:56:12,959 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:00:48,020 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:01:49,607 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:02:39,419 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:03:53,041 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:04:28,773 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:05:30,951 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:06:02,215 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:06:02,216 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:06:11,975 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:06:11,978 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:06:32,850 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:06:32,852 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:06:53,745 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 15:06:53,747 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:07:47,893 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:08:24,269 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:12:03,719 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:15:14,245 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:15:59,614 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:16:13,654 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 15:16:13,700 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:13,701 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:13,712 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:16:13,717 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:13,723 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:13,727 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:16:13,733 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:16:40,438 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 15:16:40,488 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:40,493 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:40,504 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:16:40,511 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:40,517 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:16:40,522 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:16:40,528 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 15:19:16,828 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 15:19:16,880 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:16,882 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:16,892 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:19:16,898 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:16,905 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:16,909 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:19:16,917 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 2 id
2024-08-03 15:19:50,440 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 15:19:50,486 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:50,488 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:50,497 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:19:50,502 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:50,508 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:19:50,512 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:19:50,517 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 15:21:53,805 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 15:21:53,847 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:21:53,849 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:21:53,858 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:21:53,863 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:21:53,869 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:21:53,872 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:21:53,877 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 15:21:53,889 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 15:21:53,891 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 15:21:53,892 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 15:21:53,892 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 15:21:53,895 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:21:53,895 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:21:53,896 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 15:21:53,897 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:21:53,898 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 15:21:53,898 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:21:53,899 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:29:51,140 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=8, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:30:06,301 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=8, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:32:58,813 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:33:01,075 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:33:18,251 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:35:09,213 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:35:09,221 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:35:09,222 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:38:01,187 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:38:01,227 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:38:01,241 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 15:39:20,256 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:39:44,800 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:39:44,841 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:40:20,967 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:40:21,007 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:40:21,015 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 15:40:27,422 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:40:27,461 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:40:27,469 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 15:40:27,478 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:40:27,479 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:40:27,479 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:41:28,224 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:41:28,266 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:41:28,275 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 15:41:28,284 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:41:28,285 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:41:28,285 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:51:11,245 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 15:51:11,300 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:51:11,303 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:51:11,313 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 15:51:11,321 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:51:11,326 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 15:51:11,330 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 15:51:11,338 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 15:51:11,350 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:51:11,351 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:51:11,352 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 15:51:11,354 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:51:11,354 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:51:11,354 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:51:11,358 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 15:51:11,360 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 15:51:11,361 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 15:51:11,362 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 15:51:11,365 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:51:11,365 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:51:11,366 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 15:51:11,367 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:51:11,369 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 15:51:11,369 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:51:11,369 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 15:54:48,557 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:55:00,764 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:55:59,134 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 15:55:59,176 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 15:55:59,185 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 15:55:59,200 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 15:55:59,200 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 15:55:59,200 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:11:35,727 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:11:35,770 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:11:35,771 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:15:48,585 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:16:01,255 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:17:52,955 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:18:04,691 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:18:04,733 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:18:04,733 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:18:04,742 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:18:04,742 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:18:04,745 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:18:48,433 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:19:40,601 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:21:02,920 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:21:02,963 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:25:05,546 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:25:05,554 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:25:26,580 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:25:26,588 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:27:34,931 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:27:34,980 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:27:34,982 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:27:34,992 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:27:34,998 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:27:35,003 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:27:35,007 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:27:35,012 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:27:35,021 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:27:35,023 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:27:35,023 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:27:35,024 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:27:35,025 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:27:35,025 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:27:35,028 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:27:35,030 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:27:35,030 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:27:35,033 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:27:35,033 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:27:35,052 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:27:35,052 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:27:35,054 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:27:35,057 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:27:35,066 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:27:35,068 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:27:35,070 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:27:35,071 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:27:35,073 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:27:35,074 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:27:35,075 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:27:35,075 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:27:35,077 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:27:35,077 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:27:35,077 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:30:25,207 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:30:25,259 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:30:25,261 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:30:25,273 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:30:25,279 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:30:25,284 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:30:25,288 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:30:25,294 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:30:25,308 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:30:25,309 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:30:25,310 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:30:25,312 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:30:25,312 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:30:25,313 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:30:25,317 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:30:25,319 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:30:25,320 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:30:25,323 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:30:25,324 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:30:25,326 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:30:25,327 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:30:25,329 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:30:25,339 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:30:25,357 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:30:25,360 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:30:25,361 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:30:25,362 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:30:25,365 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:30:25,365 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:30:25,368 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:30:25,368 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:30:25,370 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:30:25,370 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:30:25,371 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:31:21,416 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:31:21,454 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:31:21,455 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:31:21,465 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:31:21,466 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:31:21,467 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:31:21,474 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:31:21,476 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:31:21,490 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:32:52,676 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:32:52,716 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:32:52,717 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:32:52,725 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:32:52,726 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:32:52,728 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:32:52,735 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:32:52,738 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:32:52,756 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:33:08,635 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:33:08,672 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:33:08,672 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:33:08,682 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:33:08,682 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:33:08,684 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:33:08,692 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:33:08,695 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:33:08,710 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:33:52,422 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:33:52,459 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:34:33,779 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:34:33,816 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:35:00,000 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:35:00,042 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:35:00,043 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:35:00,050 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:35:00,050 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:35:00,052 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:35:00,059 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:35:00,062 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:35:00,079 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:36:59,991 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:37:00,033 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:37:00,034 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:37:00,043 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:37:00,043 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:37:00,045 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:37:00,053 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:37:05,767 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:37:05,859 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:38:50,654 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:38:50,691 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:38:50,691 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:38:50,699 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:38:50,699 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:38:50,701 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:38:50,708 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:38:50,711 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:38:50,727 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:40:34,769 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:40:34,911 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:42:49,361 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:42:49,403 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:42:49,403 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:42:49,412 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:42:49,413 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:42:49,414 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:42:49,421 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:42:49,423 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:42:49,440 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:43:10,984 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:43:11,034 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:43:11,036 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:43:11,045 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:43:11,053 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:43:11,059 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:43:11,063 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:43:11,068 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:43:11,079 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:43:11,080 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:43:11,081 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:43:11,082 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:43:11,083 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:43:11,083 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:43:11,087 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:43:11,088 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:43:11,089 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:43:11,092 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:43:11,092 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:43:11,112 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:43:11,112 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:43:11,114 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:43:11,118 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:43:11,128 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:43:11,131 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:43:11,133 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:43:11,134 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:43:11,136 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:43:11,137 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:43:11,138 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:43:11,139 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:43:11,141 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:43:11,141 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:43:11,141 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:45:49,127 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:45:49,172 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:45:49,174 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:45:49,182 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:45:49,187 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:45:49,193 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:45:49,196 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:45:49,202 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:45:49,212 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:45:49,214 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:45:49,214 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:45:49,216 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:45:49,216 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:45:49,216 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:45:49,220 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:45:49,221 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:45:49,222 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:45:49,224 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:45:49,224 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:45:49,241 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:45:49,242 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:45:49,244 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:45:49,248 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:45:49,258 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:45:49,260 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:45:49,261 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:45:49,262 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:45:49,264 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:45:49,265 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:45:49,267 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:45:49,267 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:45:49,268 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:45:49,269 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:45:49,269 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:15,128 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:46:15,176 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:15,178 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:15,188 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:46:15,194 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:15,201 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:15,205 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:46:15,212 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:46:15,222 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:46:15,224 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:46:15,225 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:46:15,227 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:46:15,228 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:15,228 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:15,231 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:46:15,232 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:46:15,233 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:46:15,235 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:15,236 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:15,237 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:46:15,238 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:15,240 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:46:15,248 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:46:15,263 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:46:15,266 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:46:15,267 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:46:15,268 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:46:15,270 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:15,271 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:15,273 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:46:15,273 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:15,275 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:46:15,276 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:15,276 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:31,674 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:46:31,726 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:31,727 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:31,736 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:46:31,742 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:31,747 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:46:31,751 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:46:31,756 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:46:31,765 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:46:31,767 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:46:31,767 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:46:31,769 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:46:31,770 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:31,770 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:31,774 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:46:31,776 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:46:31,776 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:46:31,778 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:31,779 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:31,780 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:46:31,781 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:46:31,783 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:46:31,791 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:46:31,808 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:46:31,810 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:46:31,811 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:46:31,812 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:46:31,814 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:31,815 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:31,817 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:46:31,817 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:31,818 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:46:31,819 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:46:31,819 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:47:57,118 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:47:57,137 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:47:57,179 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:48:16,906 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:48:16,953 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:48:16,954 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:48:16,962 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:48:16,963 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:48:16,965 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:48:16,973 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:48:16,975 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:48:16,985 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:48:16,994 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:48:47,929 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:48:47,963 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:48:47,964 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:48:47,971 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:48:47,972 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:48:47,973 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:48:47,980 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:48:47,982 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:48:47,990 INFO  org.example.service.AuthServiceImpl.sort:33 - Get all users after sort
2024-08-03 17:49:10,583 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 17:49:10,633 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:49:10,634 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:49:10,645 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 17:49:10,651 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:49:10,656 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 17:49:10,661 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 17:49:10,667 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 17:49:10,676 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 17:49:10,677 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 17:49:10,678 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 17:49:10,679 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 17:49:10,680 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:49:10,680 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:49:10,684 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:49:10,685 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:49:10,686 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 17:49:10,688 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:49:10,688 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:49:10,689 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 17:49:10,690 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 17:49:10,692 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 17:49:10,695 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:49:10,696 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:49:10,697 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 17:49:10,700 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:49:10,700 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:49:10,701 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 17:49:10,702 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:49:10,703 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 17:49:10,704 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 17:49:10,704 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 18:08:13,202 INFO  org.example.service.AuthServiceImpl.create:23 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 18:08:13,251 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 18:08:13,253 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 18:08:13,264 INFO  org.example.service.AuthServiceImpl.filter:56 - Get all find orders
2024-08-03 18:08:13,273 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 18:08:13,279 INFO  org.example.service.AuthServiceImpl.getAll:31 - Show all orders
2024-08-03 18:08:13,283 INFO  org.example.service.AuthServiceImpl.canceled:50 - Order with 2 id is canceled
2024-08-03 18:08:13,289 INFO  org.example.service.AuthServiceImpl.changeStatus:42 - Change status on is ready, repository order with 1 id
2024-08-03 18:08:13,297 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 18:08:13,299 INFO  org.example.service.AuthServiceImpl.loginUser:26 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 18:08:13,299 INFO  org.example.service.AuthServiceImpl.loginUser:30 - Uncorrected input login qwerty and password qwerty
2024-08-03 18:08:13,301 INFO  org.example.service.AuthServiceImpl.registeredUser:16 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 18:08:13,302 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 18:08:13,302 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 18:08:13,318 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 18:08:13,319 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 18:08:13,320 INFO  org.example.service.AuthServiceImpl.filter:27 - Get all users after filter
2024-08-03 18:08:13,321 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 18:08:13,322 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 18:08:13,324 INFO  org.example.service.AuthServiceImpl.edit:40 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 18:08:13,324 INFO  org.example.service.AuthServiceImpl.getAll:21 - Get all users
2024-08-03 18:08:13,326 INFO  org.example.service.AuthServiceImpl.delete:40 - Car with id - 1 removed
2024-08-03 18:08:13,328 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 18:08:13,329 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 18:08:13,330 INFO  org.example.service.AuthServiceImpl.filter:46 - Get all find cars
2024-08-03 18:08:13,332 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 18:08:13,333 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 18:08:13,335 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:32 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 18:08:13,335 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 18:08:13,337 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:27 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 18:08:13,338 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 18:08:13,338 INFO  org.example.service.AuthServiceImpl.getAll:20 - Get all cars
2024-08-03 18:46:11,495 INFO  org.example.service.AuthServiceImpl.create:37 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 18:46:11,543 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 18:46:11,545 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 18:46:11,554 INFO  org.example.service.AuthServiceImpl.filter:104 - Get all find orders
2024-08-03 18:46:11,560 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 18:46:11,566 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 18:46:11,570 INFO  org.example.service.AuthServiceImpl.canceled:90 - Order with 2 id is canceled
2024-08-03 18:46:11,576 INFO  org.example.service.AuthServiceImpl.changeStatus:76 - Change status on is ready, repository order with 1 id
2024-08-03 18:46:11,585 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 18:46:11,587 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 18:46:11,587 INFO  org.example.service.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-03 18:46:11,589 INFO  org.example.service.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 18:46:11,590 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 18:46:11,590 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 18:46:11,605 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 18:46:11,606 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 18:46:11,607 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 18:46:11,609 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 18:46:11,610 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 18:46:11,611 INFO  org.example.service.AuthServiceImpl.edit:73 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 18:46:11,612 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 18:46:11,614 INFO  org.example.service.AuthServiceImpl.delete:70 - Car with id - 1 removed
2024-08-03 18:46:11,616 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 18:46:11,617 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 18:46:11,618 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 18:46:11,621 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 18:46:11,621 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 18:46:11,622 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:55 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 18:46:11,622 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 18:46:11,624 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:50 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 18:46:11,624 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 18:46:11,624 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 19:11:58,613 INFO  org.example.service.AuthServiceImpl.create:37 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 19:11:58,666 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 19:11:58,668 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 19:11:58,682 INFO  org.example.service.AuthServiceImpl.filter:104 - Get all find orders
2024-08-03 19:11:58,688 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 19:11:58,696 INFO  org.example.service.AuthServiceImpl.getAll:52 - Show all orders
2024-08-03 19:11:58,700 INFO  org.example.service.AuthServiceImpl.canceled:90 - Order with 2 id is canceled
2024-08-03 19:11:58,705 INFO  org.example.service.AuthServiceImpl.changeStatus:76 - Change status on is ready, repository order with 1 id
2024-08-03 19:11:58,714 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 19:11:58,715 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 19:11:58,716 INFO  org.example.service.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-03 19:11:58,718 INFO  org.example.service.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 19:11:58,719 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 19:11:58,719 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 19:11:58,734 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 19:11:58,735 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 19:11:58,736 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 19:11:58,738 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 19:11:58,739 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 19:11:58,741 INFO  org.example.service.AuthServiceImpl.edit:73 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 19:11:58,742 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 19:11:58,746 INFO  org.example.service.AuthServiceImpl.delete:70 - Car with id - 1 removed
2024-08-03 19:11:58,748 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 19:11:58,750 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 19:11:58,751 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 19:11:58,754 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 19:11:58,754 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 19:11:58,755 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:55 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 19:11:58,756 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 19:11:58,757 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:50 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 19:11:58,757 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 19:11:58,757 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:22:59,004 INFO  org.example.service.AuthServiceImpl.create:41 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 20:22:59,099 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:22:59,102 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:22:59,123 INFO  org.example.service.AuthServiceImpl.filter:110 - Get all find orders
2024-08-03 20:22:59,134 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:22:59,145 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:22:59,151 INFO  org.example.service.AuthServiceImpl.canceled:94 - Order with 2 id is canceled
2024-08-03 20:22:59,174 INFO  org.example.service.AuthServiceImpl.changeStatus:80 - Change status on is ready, repository order with 1 id
2024-08-03 20:22:59,197 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 20:22:59,200 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 20:22:59,201 INFO  org.example.service.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-03 20:22:59,205 INFO  org.example.service.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 20:22:59,206 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:22:59,207 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:22:59,236 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 20:22:59,238 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 20:22:59,239 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 20:22:59,244 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:22:59,244 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:22:59,247 INFO  org.example.service.AuthServiceImpl.edit:73 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 20:22:59,248 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:22:59,253 INFO  org.example.service.AuthServiceImpl.delete:70 - Car with id - 1 removed
2024-08-03 20:22:59,258 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 20:22:59,259 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 20:22:59,261 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 20:22:59,265 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:22:59,266 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:22:59,269 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:55 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 20:22:59,269 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:22:59,271 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:50 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 20:22:59,271 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:22:59,272 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:23:45,065 INFO  org.example.service.AuthServiceImpl.canceled:94 - Order with 2 id is canceled
2024-08-03 20:24:44,901 INFO  org.example.service.AuthServiceImpl.canceled:94 - Order with 2 id is canceled
2024-08-03 20:24:51,859 INFO  org.example.service.AuthServiceImpl.create:41 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-03 20:24:51,934 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:24:51,936 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:24:51,960 INFO  org.example.service.AuthServiceImpl.filter:110 - Get all find orders
2024-08-03 20:24:51,971 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:24:51,980 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-03 20:24:51,988 INFO  org.example.service.AuthServiceImpl.canceled:94 - Order with 2 id is canceled
2024-08-03 20:24:51,996 INFO  org.example.service.AuthServiceImpl.changeStatus:80 - Change status on is ready, repository order with 1 id
2024-08-03 20:24:52,010 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-03 20:24:52,014 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-03 20:24:52,014 INFO  org.example.service.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-03 20:24:52,018 INFO  org.example.service.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-03 20:24:52,018 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:24:52,019 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:24:52,044 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 20:24:52,048 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 20:24:52,050 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-03 20:24:52,054 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:24:52,055 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:24:52,060 INFO  org.example.service.AuthServiceImpl.edit:73 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-03 20:24:52,060 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-03 20:24:52,067 INFO  org.example.service.AuthServiceImpl.delete:70 - Car with id - 1 removed
2024-08-03 20:24:52,082 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 20:24:52,085 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 20:24:52,088 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-03 20:24:52,094 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:24:52,095 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:24:52,098 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:55 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-03 20:24:52,099 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:24:52,104 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:50 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-03 20:24:52,105 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-03 20:24:52,106 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-04 10:38:40,902 INFO  org.example.service.AuthServiceImpl.create:41 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=Менеджер, orders=null), status=successfully) is created
2024-08-04 10:38:40,982 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-04 10:38:40,985 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-04 10:38:41,007 INFO  org.example.service.AuthServiceImpl.filter:110 - Get all find orders
2024-08-04 10:38:41,019 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-04 10:38:41,029 INFO  org.example.service.AuthServiceImpl.getAll:56 - Show all orders
2024-08-04 10:38:41,038 INFO  org.example.service.AuthServiceImpl.canceled:94 - Order with 2 id is canceled
2024-08-04 10:38:41,048 INFO  org.example.service.AuthServiceImpl.changeStatus:80 - Change status on is ready, repository order with 1 id
2024-08-04 10:38:41,061 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Администратор, orders=null) is logging
2024-08-04 10:38:41,064 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=Клиент, orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-04 10:38:41,065 INFO  org.example.service.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-04 10:38:41,068 INFO  org.example.service.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=Администратор, orders=null) added
2024-08-04 10:38:41,068 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-04 10:38:41,069 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-04 10:38:41,093 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-04 10:38:41,096 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-04 10:38:41,097 INFO  org.example.service.AuthServiceImpl.filter:47 - Get all users after filter
2024-08-04 10:38:41,103 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-04 10:38:41,104 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-04 10:38:41,109 INFO  org.example.service.AuthServiceImpl.edit:73 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=Клиент, orders=null) user was changed
2024-08-04 10:38:41,110 INFO  org.example.service.AuthServiceImpl.getAll:33 - Get all users
2024-08-04 10:38:41,116 INFO  org.example.service.AuthServiceImpl.delete:70 - Car with id - 1 removed
2024-08-04 10:38:41,132 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-04 10:38:41,136 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-04 10:38:41,139 INFO  org.example.service.AuthServiceImpl.filter:87 - Get all find cars
2024-08-04 10:38:41,144 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-04 10:38:41,145 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-04 10:38:41,148 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:55 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-04 10:38:41,149 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-04 10:38:41,152 INFO  org.example.service.AuthServiceImpl.saveOrUpdate:50 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-04 10:38:41,153 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-04 10:38:41,153 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-04 23:40:09,120 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Roles.ADMINISTRATOR(title=Администратор), orders=null) is logging
2024-08-04 23:40:09,134 INFO  org.example.service.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=Roles.ADMINISTRATOR(title=Администратор), orders=null) is logging
2024-08-04 23:40:12,681 INFO  org.example.service.AuthServiceImpl.getAll:34 - Get all cars
2024-08-07 13:45:47,754 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-07 13:47:51,500 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-07 13:49:10,825 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-07 13:49:51,415 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-07 13:51:27,119 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new)]
2024-08-07 13:51:51,442 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new)]
2024-08-07 13:53:18,043 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new)]
2024-08-07 13:56:42,109 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new)]
2024-08-07 13:57:36,178 INFO  org.example.service.jdbc.CarServiceJdbc.delete:85 - Car with id 6 is deleting
2024-08-07 13:57:36,208 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new)]
2024-08-07 13:58:50,130 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Cadillac, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new)]
2024-08-07 13:59:15,610 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:49 - Get all cars [Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good)]
2024-08-07 14:31:58,660 INFO  org.example.service.inMemory.AuthServiceImpl.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=[Roles.MANGER(title=Менеджер)], orders=null), status=successfully) is created
2024-08-07 14:31:58,756 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:31:58,760 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:31:58,783 INFO  org.example.service.inMemory.AuthServiceImpl.filter:112 - Get all find orders
2024-08-07 14:31:58,794 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:31:58,807 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:31:58,814 INFO  org.example.service.inMemory.AuthServiceImpl.canceled:96 - Order with 2 id is canceled
2024-08-07 14:31:58,823 INFO  org.example.service.inMemory.AuthServiceImpl.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-07 14:31:58,837 INFO  org.example.service.inMemory.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-07 14:31:58,841 INFO  org.example.service.inMemory.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-07 14:31:58,842 INFO  org.example.service.inMemory.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-07 14:31:58,846 INFO  org.example.service.inMemory.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) added
2024-08-07 14:31:58,847 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:31:58,847 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:31:58,874 INFO  org.example.service.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-07 14:31:58,878 INFO  org.example.service.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-07 14:31:58,880 INFO  org.example.service.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-07 14:31:58,891 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:31:58,892 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:31:58,895 INFO  org.example.service.inMemory.AuthServiceImpl.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-07 14:31:58,896 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:31:59,074 INFO  org.example.service.inMemory.AuthServiceImpl.delete:71 - Car with id - 1 removed
2024-08-07 14:31:59,120 INFO  org.example.service.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-07 14:31:59,121 INFO  org.example.service.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-07 14:31:59,122 INFO  org.example.service.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-07 14:31:59,124 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:31:59,124 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:31:59,125 INFO  org.example.service.inMemory.AuthServiceImpl.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-07 14:31:59,126 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:31:59,127 INFO  org.example.service.inMemory.AuthServiceImpl.saveOrUpdate:51 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-07 14:31:59,127 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:31:59,127 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:32:25,395 INFO  org.example.service.inMemory.AuthServiceImpl.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=[Roles.MANGER(title=Менеджер)], orders=null), status=successfully) is created
2024-08-07 14:32:25,502 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:32:25,505 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:32:25,530 INFO  org.example.service.inMemory.AuthServiceImpl.filter:112 - Get all find orders
2024-08-07 14:32:25,551 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:32:25,562 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-07 14:32:25,572 INFO  org.example.service.inMemory.AuthServiceImpl.canceled:96 - Order with 2 id is canceled
2024-08-07 14:32:25,595 INFO  org.example.service.inMemory.AuthServiceImpl.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-07 14:32:25,607 INFO  org.example.service.inMemory.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-07 14:32:25,611 INFO  org.example.service.inMemory.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-07 14:32:25,612 INFO  org.example.service.inMemory.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-07 14:32:25,615 INFO  org.example.service.inMemory.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) added
2024-08-07 14:32:25,616 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:32:25,617 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:32:25,644 INFO  org.example.service.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-07 14:32:25,646 INFO  org.example.service.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-07 14:32:25,659 INFO  org.example.service.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-07 14:32:25,670 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:32:25,672 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:32:25,676 INFO  org.example.service.inMemory.AuthServiceImpl.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-07 14:32:25,679 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-07 14:32:25,797 INFO  org.example.service.inMemory.AuthServiceImpl.delete:71 - Car with id - 1 removed
2024-08-07 14:32:25,818 INFO  org.example.service.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-07 14:32:25,821 INFO  org.example.service.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-07 14:32:25,824 INFO  org.example.service.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-07 14:32:25,829 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:32:25,830 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:32:25,833 INFO  org.example.service.inMemory.AuthServiceImpl.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-07 14:32:25,834 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:32:25,839 INFO  org.example.service.inMemory.AuthServiceImpl.saveOrUpdate:51 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-07 14:32:25,841 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:32:25,841 INFO  org.example.service.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-07 14:39:56,474 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:46 - Get all cars [Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good)]
2024-08-07 15:41:32,040 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:56 - Error add user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.MANGER(title=Менеджер), Roles.CLIENT(title=Клиент), Roles.ADMINISTRATOR(title=Администратор)], orders=null)
2024-08-07 15:43:51,525 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:56 - Error add user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.MANGER(title=Менеджер), Roles.ADMINISTRATOR(title=Администратор), Roles.CLIENT(title=Клиент)], orders=null)
2024-08-07 15:44:10,880 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:56 - Error add user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.MANGER(title=Менеджер), Roles.CLIENT(title=Клиент), Roles.ADMINISTRATOR(title=Администратор)], orders=null)
org.postgresql.util.PSQLException: Запрос не вернул результатов.
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:138)
	at org.example.service.jdbc.AuthServiceJdbc.registeredUser(AuthServiceJdbc.java:41)
	at org.example.App.main(App.java:30)
2024-08-07 15:46:20,922 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:57 - Error adding user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор), Roles.CLIENT(title=Клиент), Roles.MANGER(title=Менеджер)], orders=null)
org.postgresql.util.PSQLException: Запрос не вернул результатов.
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:138)
	at org.example.service.jdbc.AuthServiceJdbc.registeredUser(AuthServiceJdbc.java:41)
	at org.example.App.main(App.java:30)
2024-08-07 15:58:54,145 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:57 - Error adding user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.CLIENT(title=Клиент), Roles.ADMINISTRATOR(title=Администратор), Roles.MANGER(title=Менеджер)], orders=null)
org.postgresql.util.PSQLException: Запрос не вернул результатов.
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:138)
	at org.example.service.jdbc.AuthServiceJdbc.registeredUser(AuthServiceJdbc.java:41)
	at org.example.App.main(App.java:30)
2024-08-07 16:08:35,492 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:45 - Error adding user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор), Roles.MANGER(title=Менеджер), Roles.CLIENT(title=Клиент)], orders=null)
java.sql.BatchUpdateException: Batch entry 0 INSERT INTO car_shop.user_roles (user_id, role) VALUES (('0'::int4),('Roles.ADMINISTRATOR(title=Администратор)')) was aborted: ERROR: insert or update on table "user_roles" violates foreign key constraint "fk_user_roles_user"
  Подробности: Key (user_id)=(0) is not present in table "user".  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleCompletion(BatchResultHandler.java:186)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:590)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:912)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:936)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1733)
	at org.example.service.jdbc.AuthServiceJdbc.addRoles(AuthServiceJdbc.java:58)
	at org.example.service.jdbc.AuthServiceJdbc.registeredUser(AuthServiceJdbc.java:42)
	at org.example.App.main(App.java:30)
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "user_roles" violates foreign key constraint "fk_user_roles_user"
  Подробности: Key (user_id)=(0) is not present in table "user".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:579)
	... 6 common frames omitted
2024-08-07 16:11:50,499 ERROR org.example.service.jdbc.AuthServiceJdbc.registeredUser:47 - Error adding user User(id=0, login=wolf, password=wolf, name=Timur, age=41, city=Moscow, role=[Roles.MANGER(title=Менеджер), Roles.CLIENT(title=Клиент), Roles.ADMINISTRATOR(title=Администратор)], orders=null)
org.postgresql.util.PSQLException: Запрос не вернул результатов.
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:138)
	at org.example.service.jdbc.AuthServiceJdbc.registeredUser(AuthServiceJdbc.java:41)
	at org.example.App.main(App.java:30)
2024-08-07 17:56:08,362 INFO  org.example.service.jdbc.CarServiceJdbc.getAll:46 - Get all cars [Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good)]
2024-08-08 11:17:31,099 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception org.postgresql.util.PSQLException: Подсоединение по адресу localhost:5432 отклонено. Проверьте что хост и порт указаны правильно и что postmaster принимает TCP/IP-подсоединения.
2024-08-08 11:18:01,763 INFO  org.example.config.LiquibaseBaseConfig.<init>:31 - Migration is successfully
2024-08-08 11:22:00,501 INFO  org.example.config.LiquibaseBaseConfig.<init>:33 - Migration is successfully
2024-08-08 11:33:14,553 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/populate/v.1.0.populate-order-table.xml::create-fk_orders_user-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: constraint "fk_orders_user" for relation "orders" already exists [Failed SQL: (0) ALTER TABLE car_shop.orders ADD CONSTRAINT fk_orders_user FOREIGN KEY (order_id) REFERENCES car_shop."user" (user_id)]
2024-08-08 11:34:56,968 INFO  org.example.config.LiquibaseBaseConfig.<init>:31 - Migration is successfully
2024-08-08 11:37:42,238 INFO  org.example.repository.inMemory.AuthServiceImpl.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=[Roles.MANGER(title=Менеджер)], orders=null), status=successfully) is created
2024-08-08 11:37:42,279 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:37:42,280 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:37:42,288 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:112 - Get all find orders
2024-08-08 11:37:42,293 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:37:42,298 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:37:42,302 INFO  org.example.repository.inMemory.AuthServiceImpl.canceled:96 - Order with 2 id is canceled
2024-08-08 11:37:42,306 INFO  org.example.repository.inMemory.AuthServiceImpl.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-08 11:37:42,311 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-08 11:37:42,313 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-08 11:37:42,313 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-08 11:37:42,315 INFO  org.example.repository.inMemory.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) added
2024-08-08 11:37:42,315 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:37:42,315 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:37:42,328 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:37:42,329 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:37:42,330 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:37:42,332 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:37:42,332 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:37:42,333 INFO  org.example.repository.inMemory.AuthServiceImpl.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-08 11:37:42,334 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:37:42,376 INFO  org.example.repository.inMemory.AuthServiceImpl.delete:71 - Car with id - 1 removed
2024-08-08 11:37:42,385 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:37:42,385 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:37:42,386 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:37:42,388 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:37:42,388 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:37:42,389 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-08 11:37:42,389 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:37:42,391 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:51 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-08 11:37:42,391 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:37:42,391 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:47:02,166 INFO  org.example.repository.inMemory.AuthServiceImpl.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=[Roles.MANGER(title=Менеджер)], orders=null), status=successfully) is created
2024-08-08 11:47:02,211 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:47:02,212 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:47:02,223 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:112 - Get all find orders
2024-08-08 11:47:02,229 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:47:02,236 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:47:02,239 INFO  org.example.repository.inMemory.AuthServiceImpl.canceled:96 - Order with 2 id is canceled
2024-08-08 11:47:02,246 INFO  org.example.repository.inMemory.AuthServiceImpl.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-08 11:47:02,252 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-08 11:47:02,254 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-08 11:47:02,254 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-08 11:47:02,256 INFO  org.example.repository.inMemory.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) added
2024-08-08 11:47:02,256 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:47:02,257 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:47:02,271 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:47:02,273 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:47:02,274 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:47:02,277 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:47:02,278 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:47:02,279 INFO  org.example.repository.inMemory.AuthServiceImpl.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-08 11:47:02,279 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:47:02,324 INFO  org.example.repository.inMemory.AuthServiceImpl.delete:71 - Car with id - 1 removed
2024-08-08 11:47:02,331 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:47:02,332 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:47:02,333 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:47:02,335 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:47:02,335 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:47:02,337 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-08 11:47:02,337 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:47:02,338 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:51 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-08 11:47:02,338 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:47:02,339 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:53:33,212 INFO  org.example.repository.inMemory.AuthServiceImpl.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=[Roles.MANGER(title=Менеджер)], orders=null), status=successfully) is created
2024-08-08 11:53:33,258 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:53:33,260 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:53:33,270 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:112 - Get all find orders
2024-08-08 11:53:33,276 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:53:33,283 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 11:53:33,287 INFO  org.example.repository.inMemory.AuthServiceImpl.canceled:96 - Order with 2 id is canceled
2024-08-08 11:53:33,294 INFO  org.example.repository.inMemory.AuthServiceImpl.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-08 11:53:33,302 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-08 11:53:33,304 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-08 11:53:33,304 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-08 11:53:33,306 INFO  org.example.repository.inMemory.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) added
2024-08-08 11:53:33,307 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:53:33,307 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:53:33,320 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:53:33,322 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:53:33,322 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 11:53:33,324 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:53:33,324 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:53:33,325 INFO  org.example.repository.inMemory.AuthServiceImpl.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-08 11:53:33,326 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 11:53:33,374 INFO  org.example.repository.inMemory.AuthServiceImpl.delete:71 - Car with id - 1 removed
2024-08-08 11:53:33,379 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:53:33,380 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:53:33,380 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 11:53:33,382 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:53:33,382 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:53:33,384 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-08 11:53:33,384 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:53:33,385 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:51 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-08 11:53:33,386 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 11:53:33,386 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 12:22:17,814 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 12:22:17,849 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 12:22:17,850 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:48 - Get all users after filter
2024-08-08 12:22:17,857 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 12:22:17,857 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 12:22:17,859 INFO  org.example.repository.inMemory.AuthServiceImpl.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-08 12:22:17,866 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 12:22:17,871 INFO  org.example.repository.inMemory.AuthServiceImpl.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=[Roles.MANGER(title=Менеджер)], orders=null), status=successfully) is created
2024-08-08 12:22:17,879 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 12:22:17,880 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 12:22:17,882 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:112 - Get all find orders
2024-08-08 12:22:17,885 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 12:22:17,885 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:58 - Show all orders
2024-08-08 12:22:17,889 INFO  org.example.repository.inMemory.AuthServiceImpl.canceled:96 - Order with 2 id is canceled
2024-08-08 12:22:17,893 INFO  org.example.repository.inMemory.AuthServiceImpl.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-08 12:22:17,897 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-08 12:22:17,899 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-08 12:22:17,900 INFO  org.example.repository.inMemory.AuthServiceImpl.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-08 12:22:17,902 INFO  org.example.repository.inMemory.AuthServiceImpl.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) added
2024-08-08 12:22:17,902 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 12:22:17,902 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:34 - Get all users
2024-08-08 12:22:17,960 INFO  org.example.repository.inMemory.AuthServiceImpl.delete:71 - Car with id - 1 removed
2024-08-08 12:22:17,969 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 12:22:17,969 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 12:22:17,970 INFO  org.example.repository.inMemory.AuthServiceImpl.filter:88 - Get all find cars
2024-08-08 12:22:17,972 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 12:22:17,972 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 12:22:17,974 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-08 12:22:17,974 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 12:22:17,975 INFO  org.example.repository.inMemory.AuthServiceImpl.saveOrUpdate:51 - Car Car(id=0, brand=Audi, model=Q7, year=2024, price=20098.0, condition=new) added
2024-08-08 12:22:17,975 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 12:22:17,975 INFO  org.example.repository.inMemory.AuthServiceImpl.getAll:35 - Get all cars
2024-08-08 13:48:18,852 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 13:48:18,856 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 13:48:19,056 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 13:48:19,408 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 13:48:19,415 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 13:48:19,428 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 13:48:19,458 INFO  tc.testcontainers/ryuk:0.8.1.resolve:80 - Pulling docker image: testcontainers/ryuk:0.8.1. Please be patient; this may take some time but only needs to be done once.
2024-08-08 13:48:19,742 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 13:48:22,627 INFO  tc.testcontainers/ryuk:0.8.1.onStart:47 - Starting to pull image
2024-08-08 13:48:22,643 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  0 pending,  0 downloaded,  0 extracted, (0 bytes/0 bytes)
2024-08-08 13:48:25,769 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  2 pending,  1 downloaded,  0 extracted, (506 KB/? MB)
2024-08-08 13:48:31,955 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  1 pending,  2 downloaded,  0 extracted, (4 MB/? MB)
2024-08-08 13:48:35,240 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  0 pending,  3 downloaded,  0 extracted, (6 MB/6 MB)
2024-08-08 13:48:35,373 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  0 pending,  3 downloaded,  1 extracted, (6 MB/6 MB)
2024-08-08 13:48:35,495 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  0 pending,  3 downloaded,  2 extracted, (6 MB/6 MB)
2024-08-08 13:48:35,584 INFO  tc.testcontainers/ryuk:0.8.1.onNext:93 - Pulling image layers:  0 pending,  3 downloaded,  3 extracted, (6 MB/6 MB)
2024-08-08 13:48:35,627 INFO  tc.testcontainers/ryuk:0.8.1.onComplete:116 - Pull complete. 3 layers, pulled in 12s (downloaded 6 MB at 555 KB/s)
2024-08-08 13:48:35,627 INFO  tc.testcontainers/ryuk:0.8.1.resolve:120 - Image testcontainers/ryuk:0.8.1 pull took PT16.1684604S
2024-08-08 13:48:35,657 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 13:48:35,886 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3ec1afdf728003aad253ab453180d32a57b2eed48cdc620599d315609de16394
2024-08-08 13:48:36,240 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.5832501S
2024-08-08 13:48:36,244 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 13:48:36,245 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 13:48:36,245 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 13:48:36,246 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 13:48:36,351 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a1a35308a1a53da05f2dd0ef8c8d2963a3bbdc06c5f90792f2915c7b70bee7d7
2024-08-08 13:48:39,676 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4294879S
2024-08-08 13:48:39,677 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13884/test_car?loggerLevel=OFF)
2024-08-08 13:48:39,836 ERROR org.example.repository.jdbc.CarStorageJdbcTest.setUp:54 - Create table isn't exist
org.postgresql.util.PSQLException: ERROR: schema "car_shop" does not exist
  Позиция: 32
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.CarStorageJdbcTest.setUp(CarServiceJdbcTest.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-08 13:48:39,867 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Toyota, model=Camry, year=2021, price=30000.0, condition=New), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 14:29:37,968 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 14:29:37,972 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 14:29:38,178 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 14:29:38,341 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 14:29:38,529 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 14:29:38,530 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 14:29:38,543 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 14:29:38,561 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 14:29:38,765 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 14:29:38,912 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 4506eae6cc2569ba496ce6f34bbeecea2d270679bc8b4f8f37801e47c944f4af
2024-08-08 14:29:39,280 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7191843S
2024-08-08 14:29:39,284 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 14:29:39,285 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 14:29:39,285 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 14:29:39,285 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 14:29:39,392 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 6af691fe0ab1436e0922af36b567ad06677dd6a30c9ae289b14f26a0bf6defaa
2024-08-08 14:29:42,389 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1034095S
2024-08-08 14:29:42,389 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2749/test_сar?loggerLevel=OFF)
2024-08-08 14:30:34,895 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 14:30:34,899 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 14:30:34,957 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 14:30:35,130 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 14:30:35,329 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 14:30:35,330 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 14:30:35,346 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 14:30:35,371 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 14:30:35,563 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 14:30:35,744 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 4a1f99efb8bd8d37a991c67ea8ff59bf65d9a31770965a87395568cb73cde37e
2024-08-08 14:30:36,151 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7794323S
2024-08-08 14:30:36,157 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 14:30:36,158 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 14:30:36,158 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 14:30:36,159 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 14:30:36,320 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7c9795eb6637c7aec4ecc227367b6362b9cd028ab886ba445046bb61e3636201
2024-08-08 14:30:39,403 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2437693S
2024-08-08 14:30:39,404 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2769/car_shop.test_сar?loggerLevel=OFF)
2024-08-08 14:32:08,449 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 14:32:08,453 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 14:32:08,511 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 14:32:08,680 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 14:32:08,876 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 14:32:08,877 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 14:32:08,891 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 14:32:08,912 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 14:32:09,108 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 14:32:09,320 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3033b8ecf52d8f1bd4383b0009e85f096c04ac1f6d728acd075afeb2bab45634
2024-08-08 14:32:09,721 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8082327S
2024-08-08 14:32:09,727 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 14:32:09,727 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 14:32:09,728 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 14:32:09,728 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 14:32:09,922 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 9875c696981e782d142d6050ee244fe55daa66e1d86b5ef8c52eaee38ea61472
2024-08-08 14:32:13,059 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3304873S
2024-08-08 14:32:13,059 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2805/car_shop.test_сar?loggerLevel=OFF)
2024-08-08 14:32:13,290 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=Toyota, model=Camry, year=2021, price=30000.0, condition=New), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 14:32:21,862 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 14:32:21,865 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 14:32:21,924 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 14:32:22,086 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 14:32:22,265 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 14:32:22,266 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 14:32:22,280 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 14:32:22,303 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 14:32:22,516 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 14:32:22,716 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f80f111ae97cb165f558c4e33a9df308e0a03c58498a8d5e840b0932f8384eac
2024-08-08 14:32:23,082 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7790721S
2024-08-08 14:32:23,087 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 14:32:23,087 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 14:32:23,088 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 14:32:23,089 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 14:32:23,279 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 26a64675e8ba77485d9702c683087796672695b16c2be756b855dbd482951b79
2024-08-08 14:32:26,421 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3320732S
2024-08-08 14:32:26,422 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2819/test_сar?loggerLevel=OFF)
2024-08-08 14:32:26,666 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=Toyota, model=Camry, year=2021, price=30000.0, condition=New), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 15:29:01,978 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:29:01,982 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:29:02,183 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:29:02,355 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:29:02,546 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:29:02,548 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:29:02,562 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:29:02,584 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:29:02,789 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:29:02,946 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 42ca05ded11b5e00dc66ff95efa2a2c74a545f3833b3b724474b5f1e19e8cebd
2024-08-08 15:29:03,317 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7318302S
2024-08-08 15:29:03,322 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:29:03,322 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:29:03,323 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:29:03,323 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:29:03,442 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 73b7f0c3ab18b07bb5079d9cf4ef3c3b0855b6ec174b507d53042c08d5eb0c3b
2024-08-08 15:29:06,374 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0502294S
2024-08-08 15:29:06,375 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13581/test_сar?loggerLevel=OFF)
2024-08-08 15:29:06,548 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars []
2024-08-08 15:29:54,807 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:29:54,810 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:29:54,865 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:29:55,039 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:29:55,230 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:29:55,231 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:29:55,244 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:29:55,267 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:29:55,467 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:29:55,621 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: ae3830f176f57d86c7258cee3a78ad7de60916e07220bf4d16c9e50639b48295
2024-08-08 15:29:55,953 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6858564S
2024-08-08 15:29:55,957 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:29:55,958 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:29:55,959 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:29:55,959 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:29:56,078 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4ed4ead8a6c024aef238eae6dd78a0e1583e96fb3085597641d05832a36b499c
2024-08-08 15:29:59,029 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0699918S
2024-08-08 15:29:59,030 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13723/test_сar?loggerLevel=OFF)
2024-08-08 15:29:59,283 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars []
2024-08-08 15:30:33,148 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:30:33,152 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:30:33,363 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:30:33,526 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:30:33,700 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:30:33,701 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:30:33,715 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:30:33,733 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:30:33,926 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:30:34,079 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: b70f7d4d1cd68bce2e771750e7f4e00779cb03baa1b9ada9ee91c99e2ec2abaf
2024-08-08 15:30:34,457 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7234004S
2024-08-08 15:30:34,462 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:30:34,462 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:30:34,463 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:30:34,463 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:30:34,582 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 65129562ad40ea9d7e87cee62c1915bd3a6d942672b53fd9230f989a0274a700
2024-08-08 15:30:37,526 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0624723S
2024-08-08 15:30:37,527 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13852/test_сar?loggerLevel=OFF)
2024-08-08 15:30:37,688 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=Toyota, model=Camry, year=2021, price=30000.0, condition=New), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 15:31:45,020 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:31:45,025 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:31:45,231 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:31:45,416 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:31:45,610 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:31:45,611 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:31:45,625 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:31:45,644 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:31:45,828 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:31:46,002 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: aff9ed0607a89f2a199f2c6547172a2a7ffba3f740ca161ebefe8a3b339a79ea
2024-08-08 15:31:46,400 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7561972S
2024-08-08 15:31:46,405 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:31:46,406 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:31:46,406 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:31:46,407 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:31:46,532 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a674c8a7616743034b2c75189991a1e9e92f0e29ec89b7f1adf45f4990b76301
2024-08-08 15:31:49,512 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1049092S
2024-08-08 15:31:49,512 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13890/test_сar?loggerLevel=OFF)
2024-08-08 15:31:49,672 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=Toyota, model=Camry, year=2021, price=30000.0, condition=New), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 15:35:57,033 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:35:57,037 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:35:57,237 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:35:57,406 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:35:57,588 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:35:57,589 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:35:57,601 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:35:57,620 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:35:57,816 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:35:57,978 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 8c78c7aad0eed85da7b1d6065254209eaba7b31f8f23eeb240097279993fd2a5
2024-08-08 15:35:58,326 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7058115S
2024-08-08 15:35:58,331 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:35:58,331 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:35:58,332 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:35:58,332 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:35:58,479 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: f9ae51c66ba928dfee032eb2ef81063c6bf66e1489009686bf453fcca5b975bb
2024-08-08 15:36:01,420 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0878473S
2024-08-08 15:36:01,421 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14036/test_сar?loggerLevel=OFF)
2024-08-08 15:36:01,588 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 15:51:33,436 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:51:33,439 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:51:33,637 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:51:33,807 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:51:33,993 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:51:33,994 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:51:34,006 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:51:34,025 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:51:34,219 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:51:34,442 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 1947a2b4f5c6fa809d518e4efe42a538aa818404d124dbd2ffb777f6768c2f15
2024-08-08 15:51:34,873 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8484373S
2024-08-08 15:51:34,877 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:51:34,877 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:51:34,878 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:51:34,878 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:51:35,063 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 3516f29d06720b5dad34400b8aced2a88af994fefebf293a99a25f19841cb514
2024-08-08 15:51:38,184 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3057727S
2024-08-08 15:51:38,185 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14151/test_сar?loggerLevel=OFF)
2024-08-08 15:51:38,356 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars []
2024-08-08 15:52:37,733 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:52:37,737 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:52:37,792 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:52:37,953 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:52:38,127 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:52:38,129 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:52:38,142 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:52:38,162 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:52:38,360 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:52:38,562 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f993e8de64fd5983d2401aec5a92bdd6ad742627addd8a7c9a57d24d9ff3d7be
2024-08-08 15:52:38,960 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7978643S
2024-08-08 15:52:38,966 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:52:38,966 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:52:38,967 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:52:38,967 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:52:39,158 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1974625306a8ecdff2fe180cc65faaa6aa7653cd0f3669532dffd94ab56b0680
2024-08-08 15:52:42,261 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2934254S
2024-08-08 15:52:42,262 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14164/test_сar?loggerLevel=OFF)
2024-08-08 15:52:42,545 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good)]
2024-08-08 15:53:10,805 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:53:10,808 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:53:10,866 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:53:11,038 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:53:11,219 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:53:11,220 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:53:11,234 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:53:11,255 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:53:11,468 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:53:11,682 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 4d7f4208bc189a21ae5859e933b663d0ecf740a5fc9a8cb9d8b31ce3e1949b03
2024-08-08 15:53:12,067 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8115844S
2024-08-08 15:53:12,072 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:53:12,073 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:53:12,074 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:53:12,074 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:53:12,273 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: d721a10bb0fc68536ea220c4128d08fa28bd1344e165047eadce9b0572a60588
2024-08-08 15:53:15,420 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3457964S
2024-08-08 15:53:15,423 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14180/test_сar?loggerLevel=OFF)
2024-08-08 15:53:15,713 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good)]
2024-08-08 15:57:00,068 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:57:00,072 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:57:00,127 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:57:00,309 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:57:00,485 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:57:00,486 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:57:00,500 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:57:00,521 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:57:00,718 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:57:00,933 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: ad6c03ada2ea9b5a7db882566723d8980c2aa7586e2facc93c4222a9f3d67a4b
2024-08-08 15:57:01,293 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7714149S
2024-08-08 15:57:01,298 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:57:01,298 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:57:01,299 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:57:01,300 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:57:01,475 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 9b04f748dbd6625d5ccf8de0af09e9d13c9e03665bb7719321fa8f242ada0b51
2024-08-08 15:57:04,640 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3407242S
2024-08-08 15:57:04,641 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14215/test_сar?loggerLevel=OFF)
2024-08-08 15:57:27,196 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:57:27,200 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:57:27,403 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:57:27,571 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:57:27,752 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:57:27,753 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:57:27,765 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:57:27,783 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:57:27,987 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:57:28,210 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a7dd4c61b166bbe2410f286bc0bd9a2e8ab3659b6deb8e0e7637eb4239a19ea8
2024-08-08 15:57:28,595 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8112017S
2024-08-08 15:57:28,599 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:57:28,600 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:57:28,600 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:57:28,601 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:57:28,788 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: f56e4c0f186c9ff21756ca4c4e68a477c608eb673a3710220e4b63ff5e768487
2024-08-08 15:57:31,809 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.207891S
2024-08-08 15:57:31,810 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14231/test_сar?loggerLevel=OFF)
2024-08-08 15:57:31,972 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars []
2024-08-08 15:59:06,661 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 15:59:06,664 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 15:59:06,719 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 15:59:06,886 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 15:59:07,062 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 15:59:07,063 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 15:59:07,077 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 15:59:07,096 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 15:59:07,303 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 15:59:07,460 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 1ddd1c8de4f7d0fccd6fd572811da7980868211773cb113f8af8b11e5b61a749
2024-08-08 15:59:07,811 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.715655S
2024-08-08 15:59:07,818 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 15:59:07,818 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 15:59:07,819 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 15:59:07,820 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 15:59:07,957 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: b961595564c82fbc54c49bc791c8d0233dcfa1ee282ee77ae65003dcee63c2bb
2024-08-08 15:59:10,900 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0806301S
2024-08-08 15:59:10,901 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14240/test_сar?loggerLevel=OFF)
2024-08-08 15:59:11,162 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars []
2024-08-08 16:00:45,512 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:00:45,516 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:00:45,576 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:00:45,746 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:00:45,934 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:00:45,935 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:00:45,948 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:00:45,969 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:00:46,169 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:00:46,328 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: efb1e7915aa64c9ec080c74528eba417db356bfc309b25511f3521956a7a2372
2024-08-08 16:00:46,712 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7426659S
2024-08-08 16:00:46,717 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:00:46,718 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:00:46,718 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:00:46,719 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:00:46,851 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 55170d1da4d2ec3cd92c76acfb3e5a9c4cea4f6170cd8a9b485b255bb6bf090f
2024-08-08 16:00:49,717 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT2.9984001S
2024-08-08 16:00:49,718 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14312/test_сar?loggerLevel=OFF)
2024-08-08 16:01:23,231 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:01:23,235 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:01:23,289 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:01:23,461 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:01:23,647 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:01:23,648 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:01:23,661 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:01:23,683 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:01:23,882 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:01:24,031 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a0619539b65897eff789caffcee9f5f30faae9dba8c0848cf140110bc46dba9e
2024-08-08 16:01:24,434 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.75018S
2024-08-08 16:01:24,439 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:01:24,440 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:01:24,440 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:01:24,441 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:01:24,571 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 3f3179380ca4841c3d2336c4ebaa4e4f9aecf9016e1bd0804ab0ca71a814c325
2024-08-08 16:01:27,527 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0853429S
2024-08-08 16:01:27,527 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14347/test_сar?loggerLevel=OFF)
2024-08-08 16:04:17,390 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:04:17,394 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:04:17,454 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:04:17,614 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:04:17,796 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:04:17,797 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:04:17,812 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:04:17,830 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:04:18,018 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:04:18,177 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 32a4dddbc26978cb268e3e9394b33fcd888c734b303f378a1130df8b6ec3312d
2024-08-08 16:04:18,518 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6871575S
2024-08-08 16:04:18,523 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:04:18,524 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:04:18,524 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:04:18,525 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:04:18,640 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e83e79d2a9e354318b700cec491c7452c0105a045e77ffbef846a900644e22ec
2024-08-08 16:04:21,587 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0618485S
2024-08-08 16:04:21,587 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14829/test_сar?loggerLevel=OFF)
2024-08-08 16:07:19,633 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:07:19,636 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:07:19,694 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:07:19,857 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:07:20,049 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:07:20,051 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:07:20,066 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:07:20,089 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:07:20,294 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:07:20,456 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 7605b444cfa2c69cdfe666291356132e2aba36ebaef0892caa763fc3cc39d75e
2024-08-08 16:07:20,791 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.702175S
2024-08-08 16:07:20,796 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:07:20,797 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:07:20,797 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:07:20,798 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:07:20,929 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: d8ce0bbbb4d93edbc5a9d09428d26e5528a5845f63c2c95bd566e957e5cd1be3
2024-08-08 16:07:23,859 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0615572S
2024-08-08 16:07:23,860 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14954/test_сar?loggerLevel=OFF)
2024-08-08 16:07:24,143 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good), Car(id=0, brand=Honda, model=Accord, year=2022, price=32000.0, condition=New)]
2024-08-08 16:08:08,048 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:08:08,052 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:08:08,108 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:08:08,272 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:08:08,463 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:08:08,464 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:08:08,478 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:08:08,501 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:08:08,702 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:08:08,857 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 7c9e5ff89c7308fec3aa200f550fa9a867ab2a250c24b33f8b28670a3ce6ca08
2024-08-08 16:08:09,244 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7432544S
2024-08-08 16:08:09,250 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:08:09,251 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:08:09,251 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:08:09,252 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:08:09,385 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a6352cec5e32c942998c907f95b6b64061cef658136d42a989808c12179ae47a
2024-08-08 16:08:12,341 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0890062S
2024-08-08 16:08:12,342 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14978/test_сar?loggerLevel=OFF)
2024-08-08 16:08:12,608 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:23:05,097 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:23:05,101 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:23:05,157 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:23:05,326 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:23:05,508 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:23:05,510 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:23:05,524 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:23:05,548 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:23:05,755 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:23:05,916 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a44f5f68d057a40ac7c1f78e860d2f4f4bf6370d1246376375ce19fe0747b5e8
2024-08-08 16:23:06,281 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7324092S
2024-08-08 16:23:06,286 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:23:06,286 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:23:06,287 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:23:06,288 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:23:06,425 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 3794c1ca746dd56b588af3beac51660cf83ea9c55200393dc443b6f91c6705bc
2024-08-08 16:23:09,339 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0509052S
2024-08-08 16:23:09,340 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13123/test_сar?loggerLevel=OFF)
2024-08-08 16:23:09,624 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:29:01,016 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:29:01,020 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:29:01,088 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:29:01,251 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:29:01,429 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:29:01,430 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:29:01,443 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:29:01,467 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:29:01,686 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:29:01,858 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 1c207e196cd30ea323122f5da5923560c8fe1dba61935f5d4760d4e2d9c03462
2024-08-08 16:29:02,441 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.9739891S
2024-08-08 16:29:02,447 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:29:02,447 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:29:02,447 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:29:02,448 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:29:02,637 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e219de4fd0ec867820486ea1eb8e7687f06d553407c25cda1a460c978aad3b3d
2024-08-08 16:29:05,545 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0968571S
2024-08-08 16:29:05,546 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13402/test_сar?loggerLevel=OFF)
2024-08-08 16:29:05,811 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:34:16,789 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:34:16,793 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:34:16,856 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:34:17,028 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:34:17,216 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:34:17,217 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:34:17,230 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:34:17,252 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:34:17,452 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:34:17,620 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: c9cfd1d8fb3546ea9ef546675d1fbde825228e74051564c4fe6e87bcde16421d
2024-08-08 16:34:17,975 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7226554S
2024-08-08 16:34:17,982 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:34:17,982 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:34:17,983 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:34:17,983 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:34:18,117 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: b041bfbd38725406f57da9b878147050fa90c2204c3b5a53b8b861a936c51ada
2024-08-08 16:34:21,093 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1091651S
2024-08-08 16:34:21,093 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3053/test_сar?loggerLevel=OFF)
2024-08-08 16:34:21,369 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:38:52,180 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:38:52,184 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:38:52,390 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:38:52,561 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:38:52,740 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:38:52,741 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:38:52,755 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:38:52,774 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:38:52,967 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:38:53,188 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f3f596700f5ca0dc5ceb9b1458e2871a910ea28365009d62fa8323a493cec721
2024-08-08 16:38:53,578 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8044266S
2024-08-08 16:38:53,583 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:38:53,584 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:38:53,585 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:38:53,585 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:38:53,797 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 509bb03ca184e74f50cf0a48e79d49f08aa59aeea218783998eb9a773bd2fc5d
2024-08-08 16:38:56,980 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3941465S
2024-08-08 16:38:56,981 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6762/test_сar?loggerLevel=OFF)
2024-08-08 16:38:57,139 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:38:57,183 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:41:15,919 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:41:15,923 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:41:16,130 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:41:16,297 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:41:16,471 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:41:16,472 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:41:16,485 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:41:16,504 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:41:16,701 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:41:16,868 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 572a03965fd5e8369d097d7e0ff7221c4811b94760abcb3596553da12447a37a
2024-08-08 16:41:17,265 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7616057S
2024-08-08 16:41:17,271 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:41:17,271 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:41:17,272 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:41:17,272 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:41:17,397 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a1fadc0e1d7a699fc75c298a87bca60c0f534bc9e4d8efc3e0abd6bd110265cd
2024-08-08 16:41:20,338 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0668391S
2024-08-08 16:41:20,339 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6888/test_сar?loggerLevel=OFF)
2024-08-08 16:41:20,499 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:41:20,541 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:42:37,302 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:42:37,306 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:42:37,510 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:42:37,680 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:42:37,864 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:42:37,865 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:42:37,878 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:42:37,896 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:42:38,094 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:42:38,266 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 74d11713501ff05a5ae22b44058b57d223d6922721e1ce312f773adaa0b4d113
2024-08-08 16:42:38,685 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7889657S
2024-08-08 16:42:38,690 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:42:38,690 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:42:38,691 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:42:38,691 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:42:38,890 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 30b8a7d70b49efca04af37aff44422a8087b456bec8b9d71572f9e3bc4d001ce
2024-08-08 16:42:42,080 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.388336S
2024-08-08 16:42:42,080 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6919/test_сar?loggerLevel=OFF)
2024-08-08 16:42:42,239 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:47:19,939 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:47:19,943 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:47:20,003 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:47:20,178 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:47:20,365 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:47:20,367 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:47:20,380 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:47:20,402 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:47:20,609 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:47:20,757 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 99bdedaca59feb28c573e22255d3ddd639ad56a7477d9f92514df5b730495e91
2024-08-08 16:47:21,131 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7292063S
2024-08-08 16:47:21,137 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:47:21,138 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:47:21,138 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:47:21,139 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:47:21,254 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a551f905f9ffcad9357d1377338636239c780ad6492081cb7b612a100d607b53
2024-08-08 16:47:24,194 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0553283S
2024-08-08 16:47:24,195 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7111/test_сar?loggerLevel=OFF)
2024-08-08 16:47:53,414 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:47:53,418 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:47:53,475 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:47:53,639 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:47:53,817 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:47:53,818 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:47:53,832 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:47:53,854 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:47:54,060 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:47:54,224 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 6641cb36007ec298c458192424981e8fa5b290a2d76fd6435707a5d1ab418bd5
2024-08-08 16:47:54,618 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7643201S
2024-08-08 16:47:54,623 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:47:54,624 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:47:54,624 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:47:54,625 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:47:54,746 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 0cf9082ca56c88157d436cc5c805431309ed3e9cd3118f5a76a692863adeeeb5
2024-08-08 16:47:57,713 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0876654S
2024-08-08 16:47:57,713 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7173/test_сar?loggerLevel=OFF)
2024-08-08 16:47:57,957 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:47:57,998 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:50:31,489 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:50:31,493 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:50:31,700 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:50:31,872 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:50:32,060 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:50:32,062 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:50:32,074 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:50:32,092 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:50:32,280 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:50:32,446 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 21df86bf93a7074810c031b3e066d05e23a4776c3541da9429875145e36e0e52
2024-08-08 16:50:32,816 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7235362S
2024-08-08 16:50:32,822 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:50:32,822 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:50:32,822 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:50:32,823 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:50:32,957 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: b8d3a78f16801bce4802ee20624d1078aef250602e4c25f193b34d6cd3f42302
2024-08-08 16:50:35,849 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0264701S
2024-08-08 16:50:35,850 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14690/test_сar?loggerLevel=OFF)
2024-08-08 16:50:36,016 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:50:36,055 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:52:08,548 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:52:08,552 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:52:08,779 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:52:08,950 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:52:09,129 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:52:09,130 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:52:09,145 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:52:09,164 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:52:09,355 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:52:09,516 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 6923fc8532626674a329c74cca63f065b9cbd82de878d42e8f63b35e4c177f7d
2024-08-08 16:52:09,887 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7230895S
2024-08-08 16:52:09,893 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:52:09,894 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:52:09,894 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:52:09,895 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:52:10,013 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1a9eac2e918d019086abc34f507b646aafb56ed00f005075228ee303f958c1f1
2024-08-08 16:52:13,010 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1158347S
2024-08-08 16:52:13,011 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14710/test_сar?loggerLevel=OFF)
2024-08-08 16:52:13,182 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:52:13,227 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:54:27,502 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:54:27,506 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:54:27,706 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:54:27,874 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:54:28,051 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:54:28,053 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:54:28,065 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:54:28,084 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:54:28,278 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:54:28,443 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f009abd8b609c0d5f7216d4fa2b26177e6d0af079f9dd647836d5be2dbbb0dd2
2024-08-08 16:54:28,792 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7073614S
2024-08-08 16:54:28,796 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:54:28,796 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:54:28,797 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:54:28,797 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:54:28,933 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4147b2b0bfea2366b02865ad933a7789e6f1ceefe8b6dc837e5dccfa091e0d6a
2024-08-08 16:54:31,837 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0400419S
2024-08-08 16:54:31,838 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14738/test_сar?loggerLevel=OFF)
2024-08-08 16:54:32,005 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:55:11,321 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:55:11,325 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:55:11,529 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:55:11,705 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:55:11,893 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:55:11,895 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:55:11,907 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:55:11,926 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:55:12,122 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:55:12,297 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a9ef8863465fe6543f530cb8f210fce91a83f6bd8f73c00560b18b090590893c
2024-08-08 16:55:12,655 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7283369S
2024-08-08 16:55:12,659 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:55:12,660 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:55:12,660 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:55:12,661 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:55:12,805 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 51b6d7e2fa0b257a39f93e0fbd94dd11b7c7e06814a58dcf7e765076f5e8bab9
2024-08-08 16:55:15,771 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1103585S
2024-08-08 16:55:15,772 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14752/test_сar?loggerLevel=OFF)
2024-08-08 16:55:15,933 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:55:50,820 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:55:50,824 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:55:51,033 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:55:51,197 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:55:51,373 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:55:51,374 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:55:51,388 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:55:51,409 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:55:51,606 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:55:51,772 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 634a489e675ccc97f1bd25bc2f08a54232fd12b8a2f4e95bb7b7db333393bf8a
2024-08-08 16:55:52,144 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7349082S
2024-08-08 16:55:52,149 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:55:52,149 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:55:52,150 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:55:52,150 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:55:52,284 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: effcbc8f3b6cf1d6c94f5109e145fd89acf094b832e025caaaeb36c88c5c06b0
2024-08-08 16:55:55,230 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0800266S
2024-08-08 16:55:55,231 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14763/test_сar?loggerLevel=OFF)
2024-08-08 16:55:55,390 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:56:33,283 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:56:33,287 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:56:33,491 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:56:33,654 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:56:33,833 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:56:33,834 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:56:33,846 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:56:33,864 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:56:34,060 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:56:34,216 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e254b01f73cfcbada9a6b8789a428c097cd30c7d67c64db42dec838aae886e86
2024-08-08 16:56:34,579 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7151135S
2024-08-08 16:56:34,584 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:56:34,584 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:56:34,585 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:56:34,585 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:56:34,711 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 0650a35197cd831fd4bea6a3a86921879c3369306a260b50145fab0b031627f8
2024-08-08 16:56:37,625 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0396214S
2024-08-08 16:56:37,626 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14771/test_сar?loggerLevel=OFF)
2024-08-08 16:56:37,799 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 16:58:43,197 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:58:43,202 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:58:43,411 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:58:43,577 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:58:43,764 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:58:43,765 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:58:43,780 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:58:43,798 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:58:43,995 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:58:44,163 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: b97d068c3c22832f8196c783f3efb2d5a7af170c70155c36b1e77c4ed5bb3678
2024-08-08 16:58:44,516 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7178889S
2024-08-08 16:58:44,521 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:58:44,522 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:58:44,522 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:58:44,523 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:58:44,657 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 379e6770edd35f11d986ef27be8dec20ccd4c1db853caf4106e24a80ce9e8665
2024-08-08 16:58:47,585 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0620728S
2024-08-08 16:58:47,585 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14785/test_сar?loggerLevel=OFF)
2024-08-08 16:58:47,745 ERROR org.example.repository.jdbc.CarStorageJdbc.getAll:44 - Error fetching cars a
org.postgresql.util.PSQLException: ERROR: relation "car_shop.car" does not exist
  Позиция: 15
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.executeQuery(PgStatement.java:251)
	at org.example.repository.jdbc.CarStorageJdbc.getAll(CarServiceJdbc.java:33)
	at org.example.repository.jdbc.CarStorageJdbcTest.testGetAll(CarServiceJdbcTest.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-08 16:58:47,748 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars []
2024-08-08 16:59:22,745 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 16:59:22,749 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 16:59:22,958 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 16:59:23,120 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 16:59:23,298 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 16:59:23,299 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 16:59:23,311 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 16:59:23,329 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 16:59:23,517 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 16:59:23,682 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3cc2b97790bb8498323cdc97801524148aab5d676fc31bc0bc310af25b993a88
2024-08-08 16:59:24,080 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7504751S
2024-08-08 16:59:24,084 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 16:59:24,084 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 16:59:24,085 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 16:59:24,085 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 16:59:24,212 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 351bb79476dcf2e59b792b951b426f2890de4e02a70c2870d7ead5dfa705735e
2024-08-08 16:59:27,108 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.022479S
2024-08-08 16:59:27,108 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14795/test_сar?loggerLevel=OFF)
2024-08-08 17:00:14,149 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:00:14,153 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:00:14,360 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:00:14,532 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:00:14,711 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:00:14,712 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:00:14,726 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:00:14,746 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:00:14,946 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:00:15,112 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 77ddf4799b8cd2c1dee564b2b5685b7efab681972616483153dce28965933171
2024-08-08 17:00:15,465 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7192034S
2024-08-08 17:00:15,470 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:00:15,471 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:00:15,472 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:00:15,472 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:00:15,603 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 8c5789d4f305bffab97e1aa2693e753a4d337fe3b420f976630bf51310e162ec
2024-08-08 17:00:18,534 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0617099S
2024-08-08 17:00:18,535 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14814/test_сar?loggerLevel=OFF)
2024-08-08 17:00:18,688 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:05:34,202 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:05:34,207 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:05:34,472 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:05:34,684 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:05:34,880 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:05:34,882 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:05:34,895 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:05:34,916 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:05:35,116 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:05:35,294 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 9c8130e3b7c516df8cefa8b9497ba90459512bbc04c7658ea229ab740f083137
2024-08-08 17:05:35,668 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7520053S
2024-08-08 17:05:35,673 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:05:35,674 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:05:35,674 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:05:35,675 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:05:35,813 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: f3eec5fd6a6cd4f4a3ddce019810240a657f634ba204b28d677818fdc14784b3
2024-08-08 17:05:38,906 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2309704S
2024-08-08 17:05:38,907 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2472/test_сar?loggerLevel=OFF)
2024-08-08 17:05:39,077 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:06:57,227 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:06:57,231 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:06:57,438 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:06:57,618 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:06:57,813 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:06:57,815 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:06:57,827 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:06:57,844 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:06:58,045 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:06:58,257 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 8d7cc3ce4449e49588eea12480cd47d1ca80295ddee2f326b1fb6f9e78fcc0fa
2024-08-08 17:06:58,668 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8235003S
2024-08-08 17:06:58,673 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:06:58,673 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:06:58,674 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:06:58,674 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:06:58,869 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 95a184929cac0108c556812be615ea58a7727763feb10c3bdf2d6cbb199c009f
2024-08-08 17:07:02,021 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3465709S
2024-08-08 17:07:02,021 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2814/test_сar?loggerLevel=OFF)
2024-08-08 17:07:02,179 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:07:25,440 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:07:25,444 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:07:25,644 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:07:25,810 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:07:25,985 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:07:25,987 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:07:25,999 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:07:26,018 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:07:26,218 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:07:26,427 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 238bb94568e14002602e695117abb76db46a97e3871401529e52e77c65661230
2024-08-08 17:07:26,871 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8533653S
2024-08-08 17:07:26,876 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:07:26,877 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:07:26,877 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:07:26,878 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:07:27,074 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: dbbe42d5ce8ab0b76a0394a108742833356fe5c38551405254ce65ae11d3ba6d
2024-08-08 17:07:30,269 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3909347S
2024-08-08 17:07:30,270 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2830/test_сar?loggerLevel=OFF)
2024-08-08 17:07:30,429 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:07:30,471 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:08:34,533 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:08:34,537 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:08:34,741 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:08:34,905 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:08:35,085 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:08:35,086 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:08:35,098 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:08:35,116 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:08:35,305 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:08:35,515 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 8b5ddd16336200a8df79a09415b3bc56e69c438e5d9273bca69f3a22ab0b3b6a
2024-08-08 17:08:35,910 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7942925S
2024-08-08 17:08:35,915 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:08:35,915 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:08:35,916 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:08:35,916 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:08:36,108 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 234a45d0dcd198e1c836aeaa5e70a41609a1899d8bfc151d34ebec012512c934
2024-08-08 17:08:39,323 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4063524S
2024-08-08 17:08:39,324 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2872/test_сar?loggerLevel=OFF)
2024-08-08 17:09:18,597 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:09:18,601 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:09:18,806 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:09:18,984 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:09:19,166 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:09:19,168 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:09:19,182 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:09:19,202 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:09:19,407 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:09:19,625 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 99ee53afc97f0782bdc1589cea258a171c7b81a9faa4e4dbbe9e0b37eb9181e5
2024-08-08 17:09:20,015 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8126962S
2024-08-08 17:09:20,020 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:09:20,020 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:09:20,021 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:09:20,021 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:09:20,207 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 9ff1facfc386835eb217df1462fb8da695d6ad0cd53a30a18c3dbce3907320b9
2024-08-08 17:09:23,401 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3795994S
2024-08-08 17:09:23,402 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2886/test_сar?loggerLevel=OFF)
2024-08-08 17:09:23,559 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:09:23,598 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:09:48,896 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:09:48,900 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:09:49,103 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:09:49,276 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:09:49,455 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:09:49,456 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:09:49,468 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:09:49,487 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:09:49,682 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:09:49,915 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: fa96918561b41620733df5571794df7506487532a93eb35895e5dcd45950eb35
2024-08-08 17:09:50,332 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8457847S
2024-08-08 17:09:50,338 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:09:50,339 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:09:50,340 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:09:50,340 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:09:50,537 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 189ddb240a7508df776849778bf8144db1b7b564df25c98774ff0329d15a324b
2024-08-08 17:09:53,766 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4257008S
2024-08-08 17:09:53,767 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2907/test_сar?loggerLevel=OFF)
2024-08-08 17:09:53,950 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:09:53,991 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:12:17,179 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:12:17,184 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:12:17,383 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:12:17,556 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:12:17,747 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:12:17,748 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:12:17,761 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:12:17,779 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:12:17,966 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:12:18,186 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3a0cda4e577a6daf8cafaa92a1eef793c212f7fa4690be362f407a3b528da9ae
2024-08-08 17:12:18,577 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.798028S
2024-08-08 17:12:18,582 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:12:18,583 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:12:18,584 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:12:18,585 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:12:18,776 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 15763d6f5a14d176e8d351635acb88028311b5c95b12f994b26cb96842bd9413
2024-08-08 17:12:21,867 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2820895S
2024-08-08 17:12:21,868 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3008/test_сar?loggerLevel=OFF)
2024-08-08 17:12:22,038 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:12:22,044 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:13:26,025 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/create/v.1.0.create-car-table.xml::car-initial-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: schema "car_id" does not exist [Failed SQL: (0) CREATE SEQUENCE  IF NOT EXISTS car_id.car_id_seq START WITH 1 INCREMENT BY 1]
2024-08-08 17:14:43,853 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/create/v.1.0.create-car-table.xml::car-initial-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: syntax error at or near "-"
  Позиция: 38 [Failed SQL: (0) CREATE TABLE car_shop.car (car_id BIG-SERIAL NOT NULL, brand TEXT NOT NULL, model TEXT NOT NULL, year INTEGER NOT NULL, price numeric NOT NULL, condition TEXT NOT NULL, CONSTRAINT car_pkey PRIMARY KEY (car_id))]
2024-08-08 17:15:10,597 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/create/v.1.0.create-user-table.xml::user-initial-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: syntax error at or near "-"
  Позиция: 42 [Failed SQL: (0) CREATE TABLE car_shop."user" (user_id BIG-SERIAL NOT NULL, login TEXT, password TEXT, name TEXT, age INTEGER, city TEXT, CONSTRAINT user_pkey PRIMARY KEY (user_id))]
2024-08-08 17:15:40,911 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/create/v.1.0.create-user-table.xml::user-initial-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: syntax error at or near "-"
  Позиция: 42 [Failed SQL: (0) CREATE TABLE car_shop."user" (user_id BIG-SERIAL NOT NULL, login TEXT, password TEXT, name TEXT, age INTEGER, city TEXT, CONSTRAINT user_pkey PRIMARY KEY (user_id))]
2024-08-08 17:16:04,861 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/create/v.1.0.create-role-table.xml::role-initial-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: syntax error at or near "-"
  Позиция: 46 [Failed SQL: (0) CREATE TABLE car_shop.user_roles (role_id BIG-SERIAL NOT NULL, user_id INTEGER, role TEXT, CONSTRAINT user_roles_pkey PRIMARY KEY (role_id))]
2024-08-08 17:16:35,295 ERROR org.example.config.LiquibaseBaseConfig.<init>:33 - SQL got exception liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v.1.0.car_shop/create/v.1.0.create-order-table.xml::order-initial-v.1.0::Alexandr Krylov:
     Reason: liquibase.exception.DatabaseException: ERROR: syntax error at or near "-"
  Позиция: 43 [Failed SQL: (0) CREATE TABLE car_shop.orders (order_id BIG-SERIAL NOT NULL, user_id INTEGER NOT NULL, car_id INTEGER NOT NULL, date date, status TEXT, CONSTRAINT orders_pkey PRIMARY KEY (order_id))]
2024-08-08 17:16:49,335 INFO  org.example.config.LiquibaseBaseConfig.<init>:31 - Migration is successfully
2024-08-08 17:17:38,661 INFO  org.example.config.LiquibaseBaseConfig.<init>:31 - Migration is successfully
2024-08-08 17:17:48,467 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:17:48,471 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:17:48,528 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:17:48,710 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:17:48,902 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:17:48,903 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:17:48,916 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:17:48,939 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:17:49,143 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:17:49,308 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2cbb4b2564a80fb31b1a837a944d87b597b4bf4327edf4d947eddda8a70214bf
2024-08-08 17:17:49,685 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7459182S
2024-08-08 17:17:49,690 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:17:49,690 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:17:49,691 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:17:49,691 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:17:49,823 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 0d5c673eea6c838545c906db8262e7785a8a2ac4e611db08bcc671190c2b642b
2024-08-08 17:17:52,761 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0699911S
2024-08-08 17:17:52,762 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2026/test_сar?loggerLevel=OFF)
2024-08-08 17:17:53,028 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:17:53,035 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:19:02,845 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:19:02,849 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:19:02,905 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:19:03,158 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:19:03,378 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:19:03,379 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:19:03,398 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:19:03,424 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:19:03,631 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:19:03,792 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 42f4035f9b39a28c675fde7aa0859db5adea3916079bee888f4a98bb3dc7d66e
2024-08-08 17:19:04,161 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7363673S
2024-08-08 17:19:04,167 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:19:04,168 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:19:04,168 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:19:04,169 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:19:04,293 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 6e8c79cac3fc445cd384251310d3edf8b3d25deaf898d6c05719157de3fc5e11
2024-08-08 17:19:07,225 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.056483S
2024-08-08 17:19:07,226 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:14339/test_сar?loggerLevel=OFF)
2024-08-08 17:19:07,491 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:19:07,499 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:23:48,856 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:23:48,861 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:23:49,061 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:23:49,235 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:23:49,416 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:23:49,417 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:23:49,432 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:23:49,451 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:23:49,657 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:23:49,818 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: ae5361992dee11784a1cbfa29d3b069ccaf94b280e6aaae947889ae304f35966
2024-08-08 17:23:50,244 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7929588S
2024-08-08 17:23:50,250 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:23:50,250 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:23:50,251 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:23:50,251 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:23:50,380 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: bef96c72d8c02bec168559ada698a165ffc3d6a7ac044fd9d897c5ae18a7e288
2024-08-08 17:23:53,308 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0572274S
2024-08-08 17:23:53,310 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4968/test_сar?loggerLevel=OFF)
2024-08-08 17:23:53,468 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:23:53,474 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:24:35,756 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:24:35,760 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:24:35,958 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:24:36,137 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:24:36,322 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:24:36,323 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:24:36,336 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:24:36,353 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:24:36,546 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:24:36,712 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: b218712649abdbd2b3e45b6d8956c5895939e5ec54c17d5df4ff01c8dcb80813
2024-08-08 17:24:37,088 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7344519S
2024-08-08 17:24:37,094 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:24:37,094 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:24:37,095 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:24:37,095 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:24:37,229 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 97ce9569f51302db97e6fff72512977e499d7a0400aff9bd52e21eff2c3e9099
2024-08-08 17:24:40,173 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0778766S
2024-08-08 17:24:40,174 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4984/test_сar?loggerLevel=OFF)
2024-08-08 17:24:40,338 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:24:40,345 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:24:40,379 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:27:26,175 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:27:26,178 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:27:26,235 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:27:26,398 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:27:26,574 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:27:26,575 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:27:26,590 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:27:26,616 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:27:26,819 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:27:26,966 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: ba901edf4680926b796443a163cbbacb1b7f5b6904190d49cb50d5b2a8037df4
2024-08-08 17:27:27,310 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6937428S
2024-08-08 17:27:27,315 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:27:27,315 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:27:27,316 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:27:27,316 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:27:27,453 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7427f7ac5b546d14157687cb80a65dceea96397381b97ebe0c6739d30f9b0a33
2024-08-08 17:27:30,360 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.043694S
2024-08-08 17:27:30,361 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5015/test_сar?loggerLevel=OFF)
2024-08-08 17:27:30,631 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:27:30,637 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:28:42,933 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:28:42,937 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:28:42,994 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:28:43,160 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:28:43,335 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:28:43,336 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:28:43,351 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:28:43,371 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:28:43,577 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:28:43,731 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 6f56907bf79109f6508aacae8ee0298975b6589f41e1c6b51032c5b12f0a8f08
2024-08-08 17:28:44,095 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7236909S
2024-08-08 17:28:44,100 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:28:44,101 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:28:44,102 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:28:44,102 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:28:44,228 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4bc9f50c433e3150166fad20528b69f43f938810aafc6f39cc6445c5b6d1196d
2024-08-08 17:28:47,138 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.035207S
2024-08-08 17:28:47,139 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5066/test_сar?loggerLevel=OFF)
2024-08-08 17:28:47,404 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:28:47,411 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:28:47,447 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:32:23,514 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:32:23,518 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:32:23,724 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:32:23,908 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:32:24,093 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:32:24,094 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:32:24,108 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:32:24,130 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:32:24,329 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:32:24,485 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 9521daf9984f2505cfe5ed6f7e22d57a5240a55b120bb77d368eab6a3869903b
2024-08-08 17:32:24,797 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6673861S
2024-08-08 17:32:24,803 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:32:24,803 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:32:24,803 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:32:24,804 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:32:24,945 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a958f5d0597ed5cdf27556cad4bdefe0208c56d3eb4fc96be6af49653481179a
2024-08-08 17:32:27,885 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0808324S
2024-08-08 17:32:27,886 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5169/test_сar?loggerLevel=OFF)
2024-08-08 17:32:28,041 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:32:28,047 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:32:28,083 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:41:14,103 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:41:14,107 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:41:14,327 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:41:14,502 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:41:14,680 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:41:14,681 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:41:14,694 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:41:14,716 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:41:14,916 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:41:15,075 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: ef041d386fc750eadd2c3f598e0dff7c186f6a471e068c8e9a46fba0aa8d1ae3
2024-08-08 17:41:15,455 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7389676S
2024-08-08 17:41:15,459 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:41:15,459 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:41:15,460 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:41:15,460 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:41:15,587 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: abf5cd7b921212891c4096c4e40cec6c3181243a7c53f58f25cfb5969094cba8
2024-08-08 17:41:18,767 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3061846S
2024-08-08 17:41:18,768 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5279/test_сar?loggerLevel=OFF)
2024-08-08 17:41:18,933 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:41:18,978 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 17:44:11,957 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 17:44:11,961 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 17:44:12,162 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 17:44:12,333 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 17:44:12,516 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 17:44:12,518 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 17:44:12,531 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 17:44:12,551 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 17:44:12,754 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 17:44:12,985 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: aa1bd3f53a69f96408d191da50d7a502fdce92b53f8e242fd630ebc03ea407c3
2024-08-08 17:44:13,401 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8505903S
2024-08-08 17:44:13,406 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 17:44:13,406 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 17:44:13,406 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 17:44:13,407 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 17:44:13,609 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 680df9585682daa385be6aa12b1dfc98c88827c12460648719329e1d78b3d644
2024-08-08 17:44:16,850 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4431284S
2024-08-08 17:44:16,851 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5306/test_сar?loggerLevel=OFF)
2024-08-08 17:44:17,016 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 17:44:17,023 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:46 - Get all cars [Car(id=0, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=0, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=0, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=0, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 18:45:47,121 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 18:45:47,126 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 18:45:47,328 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 18:45:47,535 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 18:45:47,777 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 18:45:47,778 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 18:45:47,793 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 18:45:47,815 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 18:45:48,025 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 18:45:48,149 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2569afb03d62109976c38cc460369d600fe15000d5c5d48856dfd52ccfb950a3
2024-08-08 18:45:48,509 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6942709S
2024-08-08 18:45:48,514 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 18:45:48,514 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 18:45:48,514 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 18:45:48,515 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 18:45:48,609 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e7797f3a6a3df65a99d3dcc1d73be43984c67182653849f186782c36f213cb9f
2024-08-08 18:45:51,960 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4446967S
2024-08-08 18:45:51,960 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3497/test_сar?loggerLevel=OFF)
2024-08-08 18:45:52,148 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 18:45:52,201 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:04:07,540 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 19:04:07,545 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 19:04:07,763 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 19:04:07,962 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 19:04:08,161 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 19:04:08,162 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 19:04:08,174 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 19:04:08,193 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 19:04:08,390 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 19:04:08,548 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 6b4b3b9ba6bc115539dae4e6c56527ccb928dcfe9f227036f498d7b40b379180
2024-08-08 19:04:08,937 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7438971S
2024-08-08 19:04:08,942 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 19:04:08,943 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 19:04:08,944 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 19:04:08,944 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 19:04:09,107 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 35b0b5e434ef1bb85c876774ac8953868efd0847caa57b3363b9ecabc95ac4a4
2024-08-08 19:04:12,242 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2977482S
2024-08-08 19:04:12,243 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11829/test_сar?loggerLevel=OFF)
2024-08-08 19:04:12,409 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-08 19:05:17,769 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 19:05:17,772 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 19:05:17,826 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 19:05:18,015 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 19:05:18,213 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 19:05:18,214 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 19:05:18,231 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 19:05:18,254 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 19:05:18,456 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 19:05:18,591 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a861f6559847e731bb965d94398abb01791f7f872feb714c32fcdc5bf5bc827f
2024-08-08 19:05:18,990 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.736016S
2024-08-08 19:05:18,995 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 19:05:18,995 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 19:05:18,996 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 19:05:18,996 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 19:05:19,120 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 45b7280ec4595ae77c6eca8384f5055adfeb8cb1b8b2f7c10ace5df56ea0f6a1
2024-08-08 19:05:22,114 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1176154S
2024-08-08 19:05:22,115 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11863/test_сar?loggerLevel=OFF)
2024-08-08 19:05:22,272 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 1 is deleting
2024-08-08 19:05:22,351 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:05:22,354 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:05:22,355 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:05:22,397 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-08 19:05:22,420 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 19:05:22,421 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 19:05:22,443 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 19:05:22,446 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 19:08:16,624 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 19:08:16,629 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 19:08:16,837 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 19:08:16,999 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 19:08:17,180 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 19:08:17,181 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 19:08:17,198 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 19:08:17,220 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 19:08:17,409 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 19:08:17,576 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 0313e12bf02594a0e217e1f2824be6ccc15c3a19ea57db85382db2c491e1a868
2024-08-08 19:08:17,928 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7084099S
2024-08-08 19:08:17,934 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 19:08:17,935 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 19:08:17,936 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 19:08:17,936 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 19:08:18,052 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: fc18c779a4797dd312f83e6b7d78f4b2ac8d4acb55713a7bcbc4e9753992721f
2024-08-08 19:08:21,131 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1959144S
2024-08-08 19:08:21,133 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11903/test_сar?loggerLevel=OFF)
2024-08-08 19:08:21,304 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-08 19:46:38,191 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 19:46:38,196 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 19:46:38,414 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 19:46:38,582 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 19:46:38,766 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 19:46:38,768 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 19:46:38,781 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 19:46:38,800 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 19:46:39,001 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 19:46:39,156 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: c386cc8d0cf18b13363eb4ca1e94a9c4bebd93eb4896c20f1ea9137d6d36d7c8
2024-08-08 19:46:39,494 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6928353S
2024-08-08 19:46:39,497 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 19:46:39,498 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 19:46:39,499 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 19:46:39,499 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 19:46:39,624 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4147ea02ed23275e2a99acea660cd5993659545552f519b5b5e8e0018f79dd3e
2024-08-08 19:46:42,593 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.093661S
2024-08-08 19:46:42,594 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12301/test_сar?loggerLevel=OFF)
2024-08-08 19:46:42,751 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:46:42,758 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:46:42,760 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 19:47:42,964 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 19:47:42,968 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 19:47:43,168 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 19:47:43,336 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 19:47:43,513 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 19:47:43,514 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 19:47:43,527 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 19:47:43,547 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 19:47:43,736 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 19:47:43,877 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 235275d9531a21cb53281f29896117eb82018ea7a3217f5b8b78f88ddd501b5a
2024-08-08 19:47:44,214 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6669057S
2024-08-08 19:47:44,219 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 19:47:44,220 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 19:47:44,220 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 19:47:44,221 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 19:47:44,356 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 3a1a4b037db831a182d7df32e21295c876d899c40a8b437171177986ea59334b
2024-08-08 19:47:47,237 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0161302S
2024-08-08 19:47:47,238 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12314/test_сar?loggerLevel=OFF)
2024-08-08 19:47:47,391 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 1 is deleting
2024-08-08 20:03:22,889 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:03:22,893 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:03:23,095 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:03:23,265 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:03:23,458 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:03:23,460 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:03:23,473 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:03:23,490 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:03:23,688 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:03:23,947 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e4728b66d9ab088d39943311c3755c32a7059eb70166fd94d8d5ce281a8d406d
2024-08-08 20:03:24,808 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT1.3177531S
2024-08-08 20:03:24,813 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:03:24,813 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:03:24,814 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:03:24,814 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:03:24,979 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: c53c4436148f0e9fe33ce72e250dfbe666f7bc62158b36ec966985e2e2a7dbd8
2024-08-08 20:03:28,108 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2933522S
2024-08-08 20:03:28,108 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12413/test_сar?loggerLevel=OFF)
2024-08-08 20:03:28,272 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:03:28,320 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:07:34,257 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:07:34,261 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:07:34,467 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:07:34,636 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:07:34,822 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:07:34,823 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:07:34,836 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:07:34,854 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:07:35,056 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:07:35,265 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 0c73fa34e5d2cf4a4c737357fb625edb093e67a29f72072596674d8f7e93750a
2024-08-08 20:07:35,655 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8012766S
2024-08-08 20:07:35,661 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:07:35,661 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:07:35,662 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:07:35,662 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:07:35,826 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 033a026b488f261c6c62c327d2f7023dce334f4671b25c66202cc29532461a28
2024-08-08 20:07:38,843 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1802932S
2024-08-08 20:07:38,844 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12444/test_сar?loggerLevel=OFF)
2024-08-08 20:07:39,016 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 6 is deleting
2024-08-08 20:07:39,018 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:08:54,217 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:08:54,221 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:08:54,418 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:08:54,582 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:08:54,758 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:08:54,760 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:08:54,773 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:08:54,792 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:08:54,986 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:08:55,141 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 933b05d5cfd81b2c6387d5b90b65ffddd555c9cde5a1a390f805b2b876a8b8df
2024-08-08 20:08:55,527 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7357309S
2024-08-08 20:08:55,531 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:08:55,532 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:08:55,532 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:08:55,533 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:08:55,646 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 85c001994b19f63804cae88842c179b256adef36d2dd95ac35043ad0421d12db
2024-08-08 20:08:58,577 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0433427S
2024-08-08 20:08:58,578 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12458/test_сar?loggerLevel=OFF)
2024-08-08 20:08:58,742 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-08 20:08:58,748 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:07,012 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:24:07,016 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:24:07,074 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:24:07,246 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:24:07,424 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:24:07,425 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:24:07,441 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:24:07,463 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:24:07,662 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:24:07,826 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 81986642236df9763c9aa0b3e8e4056f6294839e3f511e9571a2c71ad46f8dcb
2024-08-08 20:24:08,168 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.704877S
2024-08-08 20:24:08,175 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:24:08,175 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:24:08,176 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:24:08,177 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:24:08,295 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7fc3eecd447a13102bd27802a943ff5b7570c939e2117fabdab232ef5862af1e
2024-08-08 20:24:11,213 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0362826S
2024-08-08 20:24:11,214 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12551/test_сar?loggerLevel=OFF)
2024-08-08 20:24:11,374 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-08 20:24:11,380 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:11,459 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=6, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=7, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=8, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=9, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=10, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:11,462 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=6, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=7, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=8, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=9, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=10, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:11,464 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=6, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=7, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=8, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=9, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=10, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:11,511 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=11, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=12, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=13, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=14, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=15, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:11,537 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=16, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=17, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=18, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=19, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=20, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=21, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 20:24:11,539 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=16, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=17, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=18, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=19, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=20, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=21, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 20:24:11,562 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=22, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=23, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=24, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=25, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=26, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:24:11,564 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=22, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=23, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=24, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=25, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=26, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:14,356 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:31:14,361 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:31:14,433 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:31:14,622 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:31:14,812 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:31:14,813 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:31:14,828 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:31:14,855 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:31:15,053 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:31:15,208 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2fa904570ccc2d22700cddba24c1bef78daf4f52f2fdf529e7831f21aaa16ecb
2024-08-08 20:31:15,556 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7010599S
2024-08-08 20:31:15,561 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:31:15,562 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:31:15,563 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:31:15,563 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:31:15,705 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 9464132c25325e939eeacc5eb09385993755f7ef2cbe2073bcee47ec9f1b570c
2024-08-08 20:31:18,679 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1156861S
2024-08-08 20:31:18,680 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12598/test_сar?loggerLevel=OFF)
2024-08-08 20:31:18,844 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-08 20:31:18,852 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:18,927 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=6, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=7, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=8, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=9, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=10, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:18,929 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=6, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=7, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=8, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=9, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=10, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:18,932 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=6, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=7, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=8, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=9, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=10, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:18,980 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=11, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=12, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=13, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=14, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=15, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:19,003 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=16, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=17, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=18, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=19, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=20, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=21, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 20:31:19,004 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=16, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=17, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=18, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=19, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=20, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=21, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 20:31:19,027 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=22, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=23, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=24, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=25, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=26, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:31:19,030 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=22, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=23, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=24, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=25, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=26, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:22,925 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:44:22,929 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:44:23,149 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:44:23,330 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:44:23,520 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:44:23,522 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:44:23,534 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:44:23,552 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:44:23,749 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:44:23,971 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: c0d00e7618c9728a755b06dbbdedf5b39327bdbbced4f4576058f0d2b2fe5689
2024-08-08 20:44:24,369 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8173217S
2024-08-08 20:44:24,373 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:44:24,373 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:44:24,374 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:44:24,375 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:44:24,570 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 2cfe039d809e612c47eac53d007ca998c2adda0a4cbfd251c0553ec4fd37625c
2024-08-08 20:44:27,728 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3531503S
2024-08-08 20:44:27,729 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12773/test_сar?loggerLevel=OFF)
2024-08-08 20:44:27,887 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:27,936 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:34,737 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 20:44:34,740 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 20:44:34,795 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 20:44:34,964 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 20:44:35,141 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 20:44:35,142 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 20:44:35,156 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 20:44:35,179 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 20:44:35,379 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 20:44:35,579 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2ae827f360a998eaff05f9a4ae91876c871ed10d131686f80db0c90645bff0a8
2024-08-08 20:44:36,662 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT1.4822533S
2024-08-08 20:44:36,665 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 20:44:36,666 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 20:44:36,666 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 20:44:36,667 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 20:44:36,831 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 0a6c9fdc594e134bfbb1cf2eea59e3f161513090b94cc9b91b237551ac7c5b2f
2024-08-08 20:44:39,920 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2536181S
2024-08-08 20:44:39,921 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12782/test_сar?loggerLevel=OFF)
2024-08-08 20:44:40,080 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-08 20:44:40,085 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:40,154 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:40,156 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:40,158 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:40,187 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-08 20:44:40,211 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 20:44:40,212 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-08 20:44:40,236 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 20:44:40,237 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:37:39,960 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:37:39,964 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:37:40,163 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:37:40,338 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:37:40,519 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:37:40,520 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:37:40,534 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:37:40,554 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:37:40,764 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:37:40,926 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: c69b8abf8ef3275d0dd1be5d20e5298119b38fa1787c97bc36743ea9a0aba6bb
2024-08-08 23:37:41,305 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7501773S
2024-08-08 23:37:41,309 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:37:41,309 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:37:41,310 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:37:41,310 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:37:41,447 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 77482c751fc21b3c9d4810d0d9cfe19c860331dc98cf81c1c990400c12c50215
2024-08-08 23:37:44,390 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0787034S
2024-08-08 23:37:44,390 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4515/test_user?loggerLevel=OFF)
2024-08-08 23:37:44,543 ERROR org.example.repository.jdbc.UserStorageJdbcTest.setUp:57 - SQL got exception
org.postgresql.util.PSQLException: Запрос не вернул результатов.
	at org.postgresql.jdbc.PgStatement.executeQuery(PgStatement.java:252)
	at org.example.repository.jdbc.UserStorageJdbcTest.setUp(AuthUserJdbcTest.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-08 23:38:27,984 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:38:27,988 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:38:28,188 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:38:28,359 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:38:28,531 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:38:28,533 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:38:28,545 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:38:28,565 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:38:28,771 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:38:28,928 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 1d9874d0a1c7bf4a4d593741c2e47ffaec8a2801a7cb12c830e64ed8c57f2ac4
2024-08-08 23:38:29,280 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7146988S
2024-08-08 23:38:29,286 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:38:29,286 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:38:29,287 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:38:29,287 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:38:29,413 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 37d9bf9acb4ace7a13ed12e2fc81d03d37a6256c5b233b9343a768c4639ace48
2024-08-08 23:38:32,559 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.27182S
2024-08-08 23:38:32,560 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4526/test_user?loggerLevel=OFF)
2024-08-08 23:39:07,110 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:39:07,114 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:39:07,311 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:39:07,484 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:39:07,656 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:39:07,657 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:39:07,670 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:39:07,689 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:39:07,888 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:39:08,045 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: edb913fc6849351a824f84c4942b551db627ba5d96ef4987ee401715dd2295e6
2024-08-08 23:39:08,431 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7420763S
2024-08-08 23:39:08,437 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:39:08,438 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:39:08,438 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:39:08,439 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:39:08,569 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: b795ed1fea61516d53a4481bfe97e79412b9c63fa0034233c3de31fd4c7b45a9
2024-08-08 23:39:11,528 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.08877S
2024-08-08 23:39:11,529 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4534/test_user?loggerLevel=OFF)
2024-08-08 23:40:45,362 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:40:45,367 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:40:45,565 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:40:45,738 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:40:45,911 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:40:45,912 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:40:45,925 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:40:45,945 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:40:46,136 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:40:46,297 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 8a60efd149ddd48e979adb6d4d6c6a21573e4cb62eeec10293de82b1b24d4c60
2024-08-08 23:40:46,676 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7312154S
2024-08-08 23:40:46,681 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:40:46,682 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:40:46,682 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:40:46,683 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:40:46,810 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: f7fec6fe1124dd38a38b25c8a8a41b221f140529620ef3cf53706666e98cc7bb
2024-08-08 23:40:49,756 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0732221S
2024-08-08 23:40:49,756 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4602/test_user?loggerLevel=OFF)
2024-08-08 23:48:11,061 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:48:11,065 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:48:11,289 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:48:11,458 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:48:11,631 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:48:11,632 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:48:11,646 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:48:11,665 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:48:11,861 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:48:12,013 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 5f68fae89b389ec37dc3a362860f698afc92d24c0aa5aa0bd4beef2d1bf486e0
2024-08-08 23:48:12,376 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7106715S
2024-08-08 23:48:12,382 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:48:12,383 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:48:12,384 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:48:12,384 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:48:12,508 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 9ed0be0fa2d039d9fa5d31cbfadeee2198b7d645a7b563cd5fdbe65de2165b29
2024-08-08 23:48:15,433 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0488689S
2024-08-08 23:48:15,434 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4635/test_user?loggerLevel=OFF)
2024-08-08 23:48:49,669 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:48:49,674 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:48:49,890 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:48:50,054 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:48:50,227 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:48:50,229 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:48:50,242 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:48:50,262 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:48:50,465 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:48:50,626 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f000a62b2ac2635305978b8f040db5cc676578c36df494679bb460d69671706a
2024-08-08 23:48:51,005 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7429167S
2024-08-08 23:48:51,009 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:48:51,010 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:48:51,010 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:48:51,010 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:48:51,134 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e1f758065905392444b3404e5d73f157a45b502d6d37af4078176daa1f6678bf
2024-08-08 23:48:54,081 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0707006S
2024-08-08 23:48:54,082 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4643/test_user?loggerLevel=OFF)
2024-08-08 23:50:49,502 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:50:49,506 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:50:49,721 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:50:49,915 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:50:50,087 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:50:50,088 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:50:50,101 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:50:50,120 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:50:50,322 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:50:50,488 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 1f36779dc820b5cf08dbf74193d8724a0f231e3014ea0e154fbd2084e84545dd
2024-08-08 23:50:50,849 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7295138S
2024-08-08 23:50:50,855 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:50:50,855 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:50:50,856 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:50:50,856 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:50:50,982 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4c0f3e13e0bec125f9fcbc2627a5ca904f94d599203f3fa3e3c78500e3a1078d
2024-08-08 23:50:53,902 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.046142S
2024-08-08 23:50:53,903 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4664/test_user?loggerLevel=OFF)
2024-08-08 23:54:18,616 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:54:18,620 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:54:18,832 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:54:19,017 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:54:19,202 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:54:19,204 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:54:19,217 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:54:19,235 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:54:19,437 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:54:19,586 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 971931702a9459633593525af7686f71be2f0b9461fcd481167e7fd3881c779e
2024-08-08 23:54:19,965 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7291884S
2024-08-08 23:54:19,969 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:54:19,969 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:54:19,970 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:54:19,970 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:54:20,101 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 324b2bdd56bacde984df854152a126f561301212c48c8106fb1facf19e628d18
2024-08-08 23:54:23,044 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0731138S
2024-08-08 23:54:23,045 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5019/test_user?loggerLevel=OFF)
2024-08-08 23:55:02,646 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:55:02,650 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:55:02,708 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:55:02,862 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:55:03,055 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:55:03,056 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:55:03,070 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:55:03,089 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:55:03,275 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:55:03,430 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e2b62349b588db058c3a58440a30afd7187d9cd0b2396575338841f32e3799f1
2024-08-08 23:55:03,806 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.716902S
2024-08-08 23:55:03,811 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:55:03,811 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:55:03,811 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:55:03,812 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:55:03,927 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 31f1a6518194f18f4748dc613efc0b40089d8fdf64c461e8a1677cc1a16be143
2024-08-08 23:55:07,015 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2028204S
2024-08-08 23:55:07,015 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5063/test_user?loggerLevel=OFF)
2024-08-08 23:55:07,677 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(id=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-08 23:55:07,720 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(id=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-08 23:55:07,727 INFO  org.example.service.AuthServiceInMemory.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-08 23:55:07,729 INFO  org.example.service.AuthServiceInMemory.registeredUser:28 - New user is User(id=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-08 23:55:07,730 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-08 23:55:07,730 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-08 23:55:07,741 INFO  org.example.service.AuthServiceInMemory.delete:71 - Car with id - 1 removed
2024-08-08 23:55:07,750 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-08 23:55:07,751 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-08 23:55:07,752 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-08 23:55:07,759 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-08 23:55:07,759 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-08 23:55:07,761 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-08 23:55:07,761 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-08 23:55:07,763 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:51 - Car Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) added
2024-08-08 23:55:07,763 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-08 23:55:07,763 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-08 23:55:07,766 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-08 23:55:07,768 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-08 23:55:07,769 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-08 23:55:07,770 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-08 23:55:07,771 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-08 23:55:07,773 INFO  org.example.service.AuthServiceInMemory.edit:74 - User User(id=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=[Roles.CLIENT(title=Клиент)], orders=null) user was changed
2024-08-08 23:55:07,773 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-08 23:55:07,777 INFO  org.example.service.AuthServiceInMemory.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(id=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=null, orders=null), status=successfully) is created
2024-08-08 23:55:07,777 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-08 23:55:07,778 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-08 23:55:07,779 INFO  org.example.service.AuthServiceInMemory.filter:112 - Get all find orders
2024-08-08 23:55:07,782 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-08 23:55:07,783 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-08 23:55:07,784 INFO  org.example.service.AuthServiceInMemory.canceled:96 - Order with 2 id is canceled
2024-08-08 23:55:07,786 INFO  org.example.service.AuthServiceInMemory.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-08 23:55:07,789 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:55:07,954 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7169f386d6b5d01c29d73503b371b0139f5972b3a12f9669434202d6c9d88dd6
2024-08-08 23:55:10,938 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1485152S
2024-08-08 23:55:10,938 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5080/test_сar?loggerLevel=OFF)
2024-08-08 23:55:10,966 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-08 23:55:10,968 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:10,992 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:10,994 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:10,996 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:11,022 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-08 23:55:11,046 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:11,047 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:11,075 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:55:11,077 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-08 23:56:00,989 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-08 23:56:00,993 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-08 23:56:01,052 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-08 23:56:01,220 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-08 23:56:01,412 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-08 23:56:01,413 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-08 23:56:01,426 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-08 23:56:01,449 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-08 23:56:01,650 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-08 23:56:01,809 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 491f12f2b1c3b8be57d4032ed28b4f6011705aa35f50089a076bd516176e08b3
2024-08-08 23:56:02,167 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7172797S
2024-08-08 23:56:02,172 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-08 23:56:02,172 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-08 23:56:02,173 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-08 23:56:02,173 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-08 23:56:02,308 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1e7db896cd9634065d4fd56d8027e0c5605859c1e8bb853fa757e187fdddced0
2024-08-08 23:56:05,355 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1820274S
2024-08-08 23:56:05,356 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5114/test_user?loggerLevel=OFF)
2024-08-09 00:00:43,176 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:00:43,179 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:00:43,238 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:00:43,418 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:00:43,610 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:00:43,612 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:00:43,626 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:00:43,648 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:00:43,840 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:00:44,045 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3ae6a50f3511fc587bb3cc1d5e5c89e5190b2b94e7960177a0ba9fa1935dd3ba
2024-08-09 00:00:44,450 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8021677S
2024-08-09 00:00:44,456 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:00:44,456 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:00:44,457 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:00:44,457 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:00:44,648 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e52a18cde88a154ebdaa6404a78016be5e27a1bd54c7542ae3708d36b12a0c92
2024-08-09 00:00:47,793 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3356848S
2024-08-09 00:00:47,794 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5424/test_user?loggerLevel=OFF)
2024-08-09 00:00:48,007 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$0(UserStorageJdbcTest.java:71)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:00:48,043 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$1(UserStorageJdbcTest.java:72)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:02:30,107 INFO  org.example.config.LiquibaseBaseConfig.<init>:31 - Migration is successfully
2024-08-09 00:03:25,585 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:03:25,588 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:03:25,646 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:03:25,817 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:03:26,005 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:03:26,007 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:03:26,021 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:03:26,045 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:03:26,252 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:03:26,410 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 19b6bc782274593b0c001a8e3be8bce520afa5962822983b01452c9bcf4b0784
2024-08-09 00:03:26,838 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7937833S
2024-08-09 00:03:26,844 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:03:26,845 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:03:26,846 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:03:26,846 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:03:26,980 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 0ae7119a988fdc771bb01b0517306bc2388599917d6d8eaf5cab45084fcbdd78
2024-08-09 00:03:30,334 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4871968S
2024-08-09 00:03:30,334 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5517/test_user?loggerLevel=OFF)
2024-08-09 00:03:30,537 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$0(UserStorageJdbcTest.java:73)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:03:30,572 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$1(UserStorageJdbcTest.java:74)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:04:28,097 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:04:28,101 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:04:28,310 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:04:28,476 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:04:28,651 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:04:28,653 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:04:28,665 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:04:28,685 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:04:28,884 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:04:29,043 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 9c91d9c6f6b8d2f0357273f6f4ad174d4998e275e62db10f72e75cd820e07e9d
2024-08-09 00:04:29,442 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.756995S
2024-08-09 00:04:29,448 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:04:29,449 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:04:29,449 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:04:29,450 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:04:29,580 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4466e036b75d7354eb175ca8f11418a14fc788958bfc4c0cb07c76d79e408a4f
2024-08-09 00:04:32,557 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1069395S
2024-08-09 00:04:32,558 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5545/test_user?loggerLevel=OFF)
2024-08-09 00:04:32,721 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$0(UserStorageJdbcTest.java:73)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:04:32,757 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$1(UserStorageJdbcTest.java:74)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:07:02,342 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:07:02,347 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:07:02,575 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:07:02,740 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:07:02,915 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:07:02,916 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:07:02,929 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:07:02,949 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:07:03,146 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:07:03,358 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a844c76446d5340586006e818dce7034c75274d6748a1ceff4960edbc94d08c1
2024-08-09 00:07:03,738 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7889652S
2024-08-09 00:07:03,743 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:07:03,743 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:07:03,743 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:07:03,744 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:07:03,939 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 3385470f21272eed09c59895e36430685cf953d14e5ae25192800b30222dbfe4
2024-08-09 00:07:07,093 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3486865S
2024-08-09 00:07:07,094 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5653/test_user?loggerLevel=OFF)
2024-08-09 00:07:55,325 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:07:55,329 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:07:55,550 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:07:55,717 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:07:55,890 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:07:55,891 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:07:55,905 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:07:55,924 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:07:56,119 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:07:56,333 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 784be1c0d2a6f32ba914cf7df4a6f1ab372b7d29ba33f77583b7d969fc1c8dce
2024-08-09 00:07:56,748 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8246846S
2024-08-09 00:07:56,753 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:07:56,753 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:07:56,754 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:07:56,755 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:07:56,959 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 2c4fe936a1c7b51322e450ab60359c235e1ed87472ea2ae2ada2ce116c9ffac4
2024-08-09 00:08:00,076 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3210932S
2024-08-09 00:08:00,076 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5664/test_user?loggerLevel=OFF)
2024-08-09 00:08:00,243 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:09:12,031 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:09:12,035 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:09:12,263 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:09:12,447 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:09:12,640 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:09:12,641 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:09:12,655 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:09:12,674 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:09:12,875 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:09:13,078 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: b401713796063025be5438054b4e105612718e4241db4e730d154531e86dc920
2024-08-09 00:09:13,469 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7947583S
2024-08-09 00:09:13,473 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:09:13,474 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:09:13,474 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:09:13,474 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:09:13,674 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: bf2f956be8a5f8ef4cbbee2dd8b871a110c3c27bc92bc2e70d76546e18e940ca
2024-08-09 00:09:16,910 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4352524S
2024-08-09 00:09:16,911 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5687/test_user?loggerLevel=OFF)
2024-08-09 00:09:17,079 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:10:53,436 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:10:53,440 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:10:53,660 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:10:53,820 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:10:53,999 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:10:54,000 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:10:54,013 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:10:54,033 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:10:54,236 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:10:54,440 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 286b55ffa015ea460b08155b37187c1d0a02a158d1d96ead7f2e19d898ea40ec
2024-08-09 00:10:54,825 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7924287S
2024-08-09 00:10:54,832 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:10:54,832 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:10:54,833 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:10:54,833 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:10:55,031 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7617040139cd5a973e65d575faf016788ba0d20000c0f779f1fc8b6083f9f075
2024-08-09 00:10:58,146 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3127384S
2024-08-09 00:10:58,147 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5734/test_user?loggerLevel=OFF)
2024-08-09 00:10:58,331 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:12:39,615 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:12:39,619 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:12:39,819 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:12:39,996 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:12:40,179 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:12:40,181 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:12:40,193 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:12:40,213 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:12:40,405 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:12:40,547 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 5e49c067c3620fcde6795a820135bd1b5584066697923ab97dfa59e5ae921a54
2024-08-09 00:12:40,931 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7181858S
2024-08-09 00:12:40,936 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:12:40,937 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:12:40,937 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:12:40,938 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:12:41,076 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: db2e0302e0f703158f3e632f3ddbe6094a3e1992d937e4b10632bc76c04b4c91
2024-08-09 00:12:43,995 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0568188S
2024-08-09 00:12:43,996 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5777/test_user?loggerLevel=OFF)
2024-08-09 00:12:44,155 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$0(UserStorageJdbcTest.java:73)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:12:44,193 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$1(UserStorageJdbcTest.java:74)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:14:10,554 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:14:10,558 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:14:10,786 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:14:10,967 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:14:11,142 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:14:11,143 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:14:11,158 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:14:11,178 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:14:11,372 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:14:11,542 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 346ca008fd3cd7c4847dd925b8701f8f70dc1586cf7f6fe8ad74907b52efc08d
2024-08-09 00:14:11,879 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7003761S
2024-08-09 00:14:11,885 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:14:11,885 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:14:11,886 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:14:11,886 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:14:12,082 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: b4095fa6e30d45660b5041a91ba0657127f0a13e8a88a5195b7af67630e741d5
2024-08-09 00:14:15,052 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1656968S
2024-08-09 00:14:15,053 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5816/test_user?loggerLevel=OFF)
2024-08-09 00:14:15,220 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$0(UserStorageJdbcTest.java:73)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:14:15,267 ERROR org.example.repository.jdbc.UserStorageJdbc.getAll:47 - SQL got exception
org.postgresql.util.PSQLException: Колонки user_id не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.UserStorageJdbc.getAll(UserStorageJdbc.java:38)
	at org.example.repository.jdbc.UserStorageJdbcTest.lambda$getAll$1(UserStorageJdbcTest.java:74)
	at org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)
	at org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)
	at org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2944)
	at org.example.repository.jdbc.UserStorageJdbcTest.getAll(UserStorageJdbcTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 00:17:06,380 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:17:06,384 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:17:06,441 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:17:06,607 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:17:06,785 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:17:06,786 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:17:06,800 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:17:06,822 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:17:07,029 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:17:07,279 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 1f1e2448368574df323f3853c9b2fe00bcab8ba1f7ad24a63b2df18228cf7804
2024-08-09 00:17:07,629 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8067285S
2024-08-09 00:17:07,634 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:17:07,635 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:17:07,635 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:17:07,636 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:17:07,771 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: c6a850c56f1c66e736b7ff69c37f4e225c95bc0c293b97dfcd799445cf27b9be
2024-08-09 00:17:10,690 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0537071S
2024-08-09 00:17:10,690 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5951/test_user?loggerLevel=OFF)
2024-08-09 00:18:04,381 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:18:04,385 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:18:04,586 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:18:04,755 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:18:04,926 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:18:04,927 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:18:04,940 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:18:04,959 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:18:05,157 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:18:05,310 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: bc73bde1a6f0edafebcc0b2b86a1fde857753005b9f4536e55ad2d8192ec4ec9
2024-08-09 00:18:05,670 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7113969S
2024-08-09 00:18:05,675 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:18:05,676 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:18:05,678 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:18:05,678 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:18:05,800 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 923e2899979915892da392bef4057014da5a4b99cb5fcfa1cc82e1753b9b9c07
2024-08-09 00:18:08,738 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0596466S
2024-08-09 00:18:08,739 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5979/test_user?loggerLevel=OFF)
2024-08-09 00:22:13,573 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:22:13,577 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:22:13,786 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:22:13,949 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:22:14,135 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:22:14,137 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:22:14,152 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:22:14,174 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:22:14,357 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:22:14,527 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e681f041d62a0666dad6f25d35b1ffef8cd0ff384b7e2d76b7d43b22c4e90681
2024-08-09 00:22:14,896 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7222751S
2024-08-09 00:22:14,901 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:22:14,901 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:22:14,902 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:22:14,902 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:22:15,038 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7194c1f94155955e1656258524939f924420b05940533b6c7987d638d25e4d38
2024-08-09 00:22:17,942 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0400167S
2024-08-09 00:22:17,943 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6078/test_user?loggerLevel=OFF)
2024-08-09 00:23:21,261 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:23:21,265 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:23:21,480 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:23:21,646 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:23:21,821 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:23:21,822 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:23:21,836 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:23:21,857 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:23:22,062 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:23:22,228 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a91b4f441256064d84dfeb6c5fad09574d67c9e84d441133ff1f85ccd64a7030
2024-08-09 00:23:22,603 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7460933S
2024-08-09 00:23:22,608 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:23:22,608 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:23:22,609 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:23:22,610 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:23:22,741 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: cad85d98819cc73741731266935ce89e48cb4d9d3cf4a98b07ea8e19aac9db1a
2024-08-09 00:23:25,666 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0564208S
2024-08-09 00:23:25,667 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6112/test_user?loggerLevel=OFF)
2024-08-09 00:26:03,886 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:54 - Get all users after filter
2024-08-09 00:26:26,585 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:54 - Get all users after filter
2024-08-09 00:26:35,237 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:26:35,241 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:26:35,454 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:26:35,617 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:26:35,792 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:26:35,793 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:26:35,808 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:26:35,827 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:26:36,024 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:26:36,197 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2e23ab8b59bc791b0e6b7775eb76cde5f3e7ba5d50700a3cd7bfdd4e0938ad8b
2024-08-09 00:26:36,550 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7233143S
2024-08-09 00:26:36,555 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:26:36,555 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:26:36,555 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:26:36,556 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:26:36,678 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7322c8eca0b456549676a685555bc39421b051f4f3fb75fe43665a9171abe782
2024-08-09 00:26:39,639 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0832428S
2024-08-09 00:26:39,640 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6181/test_user?loggerLevel=OFF)
2024-08-09 00:26:39,803 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:54 - Get all users after filter
2024-08-09 00:26:39,846 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:54 - Get all users after filter
2024-08-09 00:26:39,848 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:54 - Get all users after filter
2024-08-09 00:29:27,198 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:29:27,201 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:29:27,415 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:29:27,583 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:29:27,765 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:29:27,766 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:29:27,781 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:29:27,799 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:29:27,992 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:29:28,131 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f8b81406225b64c6ccc658095a521e589aee259409b1259bfb02e290ccfbf170
2024-08-09 00:29:28,529 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7299257S
2024-08-09 00:29:28,534 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:29:28,534 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:29:28,535 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:29:28,535 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:29:28,665 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7facafcc9f0d8256b19fab9b29f0c3049166943721532495e9f9b26868739ed7
2024-08-09 00:29:31,587 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0522672S
2024-08-09 00:29:31,588 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6227/test_user?loggerLevel=OFF)
2024-08-09 00:29:31,738 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:61 - Get all users after sort
2024-08-09 00:30:32,712 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:30:32,716 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:30:32,917 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:30:33,084 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:30:33,264 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:30:33,266 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:30:33,279 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:30:33,299 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:30:33,498 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:30:33,651 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 164c832b4534b953ba37d79607a08213f4e40c72c61e18d3c4755ef16ab2576c
2024-08-09 00:30:34,005 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7059722S
2024-08-09 00:30:34,009 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:30:34,010 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:30:34,010 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:30:34,011 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:30:34,139 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: bf5c03be0fd8980698d70081adc6c1b618c85b4db8de6a33fcfbe77eb6fd1be1
2024-08-09 00:30:37,069 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0584446S
2024-08-09 00:30:37,070 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6294/test_user?loggerLevel=OFF)
2024-08-09 00:30:37,230 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:61 - Get all users after sort
2024-08-09 00:30:37,244 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:61 - Get all users after sort
2024-08-09 00:30:37,281 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:61 - Get all users after sort
2024-08-09 00:31:23,730 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:31:23,733 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:31:23,940 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:31:24,110 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:31:24,289 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:31:24,290 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:31:24,303 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:31:24,322 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:31:24,513 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:31:24,672 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3c360c7b0ce6ef3b05bb721eaf88dd5721b2385cac3891bb314d5e6c2ab6626f
2024-08-09 00:31:25,041 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7184871S
2024-08-09 00:31:25,045 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:31:25,046 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:31:25,046 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:31:25,047 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:31:25,166 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1da882f2dc30a6a2e2fc674d96070bb9efed14d02297bb7c32de16d99f65e148
2024-08-09 00:31:28,107 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0602557S
2024-08-09 00:31:28,107 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6340/test_user?loggerLevel=OFF)
2024-08-09 00:32:19,183 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:32:19,187 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:32:19,394 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:32:19,566 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:32:19,751 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:32:19,753 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:32:19,766 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:32:19,784 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:32:19,970 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:32:20,123 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 4d5b0c47104ca41bfefc6f6df71a04a2af6bec157c54a625e84b8ea7052b6006
2024-08-09 00:32:20,484 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7001469S
2024-08-09 00:32:20,489 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:32:20,490 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:32:20,490 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:32:20,491 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:32:20,622 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 25273f25018c87f8178396f76bcc3eab5fe8ee35f94e027cc2f3082119fff57f
2024-08-09 00:32:23,562 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0717728S
2024-08-09 00:32:23,564 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6351/test_user?loggerLevel=OFF)
2024-08-09 00:35:08,988 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:35:08,992 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:35:09,198 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:35:09,376 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:35:09,562 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:35:09,563 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:35:09,579 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:35:09,604 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:35:09,812 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:35:10,256 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 9b1e4988e6c4fceb1579d7e6f1f0a2fe7fbe4cbe8fac2b736053d380786955cf
2024-08-09 00:35:10,738 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT1.1328369S
2024-08-09 00:35:10,743 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:35:10,743 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:35:10,744 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:35:10,744 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:35:10,884 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 420611eb2b6f167326193a9fa4a8289d96c87d3cd5f0bfb7f32fd3a805252814
2024-08-09 00:35:13,997 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2528956S
2024-08-09 00:35:13,998 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6496/test_user?loggerLevel=OFF)
2024-08-09 00:35:14,198 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:69 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:47:43,892 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:47:43,896 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:47:44,128 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:47:44,294 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:47:44,465 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:47:44,466 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:47:44,480 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:47:44,501 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:47:44,705 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:47:44,865 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 4c642fe1504776f056f16a745ff3f48342e1540b5c44d0c89f07fd176c05b8e6
2024-08-09 00:47:45,246 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7452406S
2024-08-09 00:47:45,251 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:47:45,251 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:47:45,251 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:47:45,252 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:47:45,379 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 116ebf59f0e210f3c9329eabc676fdd719b644d5f2a43eb795d4a40dec2e8f59
2024-08-09 00:47:48,335 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0834138S
2024-08-09 00:47:48,336 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6966/test_user?loggerLevel=OFF)
2024-08-09 00:47:48,486 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:48:08,534 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:48:08,537 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:48:08,737 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:48:08,906 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:48:09,081 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:48:09,082 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:48:09,096 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:48:09,117 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:48:09,320 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:48:09,478 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2890f70243a50099ca9f54ec4275e649ee113a222b50af3b1b6b39d8217d04a5
2024-08-09 00:48:09,877 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7605783S
2024-08-09 00:48:09,883 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:48:09,883 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:48:09,884 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:48:09,884 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:48:10,014 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 3d48764acf771dda405359e6ee16c78f5953a21f3626b31bc8894e1ed98df375
2024-08-09 00:48:12,931 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0470027S
2024-08-09 00:48:12,932 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6984/test_user?loggerLevel=OFF)
2024-08-09 00:48:13,083 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:48:30,150 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:48:30,154 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:48:30,363 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:48:30,530 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:48:30,704 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:48:30,705 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:48:30,719 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:48:30,738 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:48:30,931 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:48:31,095 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 0bd24572de570a1aa3243ab9312de5bcc5b5896d9f22a4eb8924764464126ebc
2024-08-09 00:48:31,487 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7495006S
2024-08-09 00:48:31,493 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:48:31,494 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:48:31,494 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:48:31,495 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:48:31,628 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: d9f07dc066363fd0546d32459db8f3b58b0404705d598533b02662abaa1b4f84
2024-08-09 00:48:34,569 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0737161S
2024-08-09 00:48:34,569 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:6995/test_user?loggerLevel=OFF)
2024-08-09 00:48:34,728 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:48:47,186 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:48:47,189 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:48:47,245 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:48:47,408 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:48:47,589 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:48:47,590 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:48:47,604 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:48:47,624 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:48:47,823 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:48:47,982 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 6e0649dc998c7f0389a4d3e512ae361d4a4327a098e351b6a9448b8ba7704ec1
2024-08-09 00:48:48,371 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7467111S
2024-08-09 00:48:48,376 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:48:48,377 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:48:48,378 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:48:48,378 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:48:48,513 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 73923e5fec904af48235aea6c353a3be82a5e3106b96a7f2fd2259ac44a62836
2024-08-09 00:48:51,471 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.092612S
2024-08-09 00:48:51,471 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7006/test_user?loggerLevel=OFF)
2024-08-09 00:48:51,631 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:48:51,673 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:48:51,676 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:48:51,738 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:48:51,776 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 00:48:51,779 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 00:49:57,494 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:49:57,497 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:49:57,554 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:49:57,710 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:49:57,905 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:49:57,906 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:49:57,923 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:49:57,947 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:49:58,137 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:49:58,297 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 7168f83447b54263b8edb8e5d86853ff40586a4342f4243f95b1c4c2da071c7d
2024-08-09 00:49:58,661 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7140892S
2024-08-09 00:49:58,666 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:49:58,667 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:49:58,667 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:49:58,668 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:49:58,794 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1e9384018440542e179be2ae0fc0b36879daa2dc27a0ea30d4f088a22954a0f2
2024-08-09 00:50:01,700 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0326459S
2024-08-09 00:50:01,702 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7057/test_сar?loggerLevel=OFF)
2024-08-09 00:50:01,859 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 00:50:01,865 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:50:01,942 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:50:01,944 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:50:01,946 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:50:01,975 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 00:50:02,000 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 00:50:02,002 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 00:50:02,024 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:50:02,026 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:50:02,614 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:50:02,827 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e211dadc39fe70c0923b038d26291fc720f58ab4bd0e39c2007d2e4899fee79d
2024-08-09 00:50:05,801 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1868429S
2024-08-09 00:50:05,801 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7073/test_user?loggerLevel=OFF)
2024-08-09 00:50:05,825 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:50:05,828 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:50:05,830 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:50:05,878 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:50:05,908 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 00:50:05,910 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 00:50:06,518 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-09 00:50:06,520 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-09 00:50:06,523 INFO  org.example.service.AuthServiceInMemory.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-09 00:50:06,525 INFO  org.example.service.AuthServiceInMemory.registeredUser:28 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 00:50:06,525 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:50:06,525 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:50:06,537 INFO  org.example.service.AuthServiceInMemory.delete:71 - Car with id - 1 removed
2024-08-09 00:50:06,546 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 00:50:06,547 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 00:50:06,547 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 00:50:06,550 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:50:06,550 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:50:06,552 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 00:50:06,552 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:50:06,554 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) updated
2024-08-09 00:50:06,554 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:50:06,555 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:50:06,559 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 00:50:06,560 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 00:50:06,561 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 00:50:06,563 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:50:06,564 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:50:06,565 INFO  org.example.service.AuthServiceInMemory.edit:74 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:50:06,565 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:50:06,568 INFO  org.example.service.AuthServiceInMemory.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(userId=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=null, orders=null), status=successfully) is created
2024-08-09 00:50:06,568 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:50:06,568 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:50:06,570 INFO  org.example.service.AuthServiceInMemory.filter:112 - Get all find orders
2024-08-09 00:50:06,573 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:50:06,573 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:50:06,575 INFO  org.example.service.AuthServiceInMemory.canceled:96 - Order with 2 id is canceled
2024-08-09 00:50:06,576 INFO  org.example.service.AuthServiceInMemory.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-09 00:53:18,875 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 00:53:18,879 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 00:53:18,937 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 00:53:19,097 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 00:53:19,282 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 00:53:19,283 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 00:53:19,298 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 00:53:19,320 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 00:53:19,525 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 00:53:19,688 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e8f301315e4a6744b51cab504d34d1861b760b4fd80d15843c2a70695a7cf11c
2024-08-09 00:53:20,061 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7413709S
2024-08-09 00:53:20,067 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 00:53:20,067 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 00:53:20,068 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 00:53:20,068 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:53:20,186 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 03b861328959da06d4525a3e527cead239d9a8dd1f42a62bb48b7345e0a05bb7
2024-08-09 00:53:23,259 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1915494S
2024-08-09 00:53:23,260 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7160/test_сar?loggerLevel=OFF)
2024-08-09 00:53:23,428 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 00:53:23,434 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:53:23,511 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:53:23,514 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:53:23,516 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:53:23,561 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 00:53:23,589 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 00:53:23,591 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 00:53:23,617 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:53:23,619 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 00:53:24,097 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 00:53:24,202 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 031c3e6c603afc32f8e6a0dd7854b050c6af047e3c0cde81bc1b66b5110aeb31
2024-08-09 00:53:27,106 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0097635S
2024-08-09 00:53:27,107 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7171/test_user?loggerLevel=OFF)
2024-08-09 00:53:27,134 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:53:27,136 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:53:27,138 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 00:53:27,186 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:53:27,215 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 00:53:27,217 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 00:53:27,724 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-09 00:53:27,726 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-09 00:53:27,729 INFO  org.example.service.AuthServiceInMemory.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-09 00:53:27,730 INFO  org.example.service.AuthServiceInMemory.registeredUser:28 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 00:53:27,731 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:53:27,731 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:53:27,740 INFO  org.example.service.AuthServiceInMemory.delete:71 - Car with id - 1 removed
2024-08-09 00:53:27,747 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 00:53:27,748 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 00:53:27,748 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 00:53:27,750 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:53:27,750 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:53:27,751 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 00:53:27,751 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:53:27,752 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) updated
2024-08-09 00:53:27,752 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:53:27,752 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 00:53:27,755 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 00:53:27,755 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 00:53:27,756 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 00:53:27,757 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:53:27,758 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:53:27,759 INFO  org.example.service.AuthServiceInMemory.edit:74 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 00:53:27,759 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 00:53:27,762 INFO  org.example.service.AuthServiceInMemory.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(userId=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=null, orders=null), status=successfully) is created
2024-08-09 00:53:27,762 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:53:27,762 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:53:27,765 INFO  org.example.service.AuthServiceInMemory.filter:112 - Get all find orders
2024-08-09 00:53:27,768 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:53:27,768 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 00:53:27,770 INFO  org.example.service.AuthServiceInMemory.canceled:96 - Order with 2 id is canceled
2024-08-09 00:53:27,772 INFO  org.example.service.AuthServiceInMemory.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-09 01:06:22,357 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 01:06:22,361 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 01:06:22,416 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 01:06:22,579 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 01:06:22,770 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 01:06:22,772 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 01:06:22,785 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 01:06:22,808 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 01:06:23,009 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 01:06:23,242 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: fb0fe606826f2381dd7f80625dd05f8b770ddd206a0bb3fec1f3d4d4e7e902a8
2024-08-09 01:06:23,611 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8026593S
2024-08-09 01:06:23,616 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 01:06:23,617 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 01:06:23,618 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 01:06:23,618 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 01:06:23,816 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 77320fb84c8c672a0406d006a71ccc6a159ae8c322802b08cc2bee0e76707edb
2024-08-09 01:06:27,323 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.7047254S
2024-08-09 01:06:27,324 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7728/test_сar?loggerLevel=OFF)
2024-08-09 01:06:27,479 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 01:06:27,485 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 01:06:27,557 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 01:06:27,560 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 01:06:27,562 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 01:06:27,591 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 01:06:27,615 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 01:06:27,616 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 01:06:27,640 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 01:06:27,643 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 01:06:28,165 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 01:06:28,361 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1ec4364fa3053585d4321be791e170fd697ffccbbf97871832bfdd0066a922e6
2024-08-09 01:06:31,514 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.349142S
2024-08-09 01:06:31,515 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7742/test_user?loggerLevel=OFF)
2024-08-09 01:06:31,543 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 01:06:31,546 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 01:06:31,548 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 01:06:31,606 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 01:06:31,639 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 01:06:31,641 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 01:06:32,299 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-09 01:06:32,302 INFO  org.example.service.AuthServiceInMemory.loginUser:48 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-09 01:06:32,305 INFO  org.example.service.AuthServiceInMemory.loginUser:52 - Uncorrected input login qwerty and password qwerty
2024-08-09 01:06:32,307 INFO  org.example.service.AuthServiceInMemory.registeredUser:28 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 01:06:32,307 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 01:06:32,307 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 01:06:32,318 INFO  org.example.service.AuthServiceInMemory.delete:71 - Car with id - 1 removed
2024-08-09 01:06:32,325 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 01:06:32,325 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 01:06:32,326 INFO  org.example.service.AuthServiceInMemory.filter:88 - Get all find cars
2024-08-09 01:06:32,328 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 01:06:32,328 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 01:06:32,329 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 01:06:32,330 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 01:06:32,331 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:56 - Car Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) updated
2024-08-09 01:06:32,331 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 01:06:32,332 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all cars
2024-08-09 01:06:32,334 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 01:06:32,335 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 01:06:32,336 INFO  org.example.service.AuthServiceInMemory.filter:48 - Get all users after filter
2024-08-09 01:06:32,338 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 01:06:32,338 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 01:06:32,339 INFO  org.example.service.AuthServiceInMemory.edit:74 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 01:06:32,340 INFO  org.example.service.AuthServiceInMemory.getAll:34 - Get all users
2024-08-09 01:06:32,342 INFO  org.example.service.AuthServiceInMemory.create:43 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(userId=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=null, orders=null), status=successfully) is created
2024-08-09 01:06:32,342 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 01:06:32,343 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 01:06:32,344 INFO  org.example.service.AuthServiceInMemory.filter:112 - Get all find orders
2024-08-09 01:06:32,347 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 01:06:32,347 INFO  org.example.service.AuthServiceInMemory.getAll:58 - Show all orders
2024-08-09 01:06:32,349 INFO  org.example.service.AuthServiceInMemory.canceled:96 - Order with 2 id is canceled
2024-08-09 01:06:32,352 INFO  org.example.service.AuthServiceInMemory.changeStatus:82 - Change status on is ready, repository order with 1 id
2024-08-09 09:15:32,194 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 09:15:32,198 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 09:15:32,251 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 09:15:32,467 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 09:15:32,705 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 09:15:32,707 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 09:15:32,721 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 09:15:32,742 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 09:15:32,977 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 09:15:33,107 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 71139e9a7bb50dd8b203dc25b8de219fcd0f9c501ae27fd4752fea9b3e5f8d82
2024-08-09 09:15:33,503 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7607482S
2024-08-09 09:15:33,507 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 09:15:33,508 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 09:15:33,509 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 09:15:33,509 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 09:15:33,588 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 7385fe1a50bd3085d12cb8d248172d978261d3cdfcaa15ca873934323ab70822
2024-08-09 09:15:36,771 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2613692S
2024-08-09 09:15:36,772 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2829/test_сar?loggerLevel=OFF)
2024-08-09 09:15:36,989 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 09:15:36,995 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:15:37,082 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:15:37,085 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:15:37,087 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:15:37,123 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 09:15:37,157 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 09:15:37,168 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 09:15:37,202 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:15:37,205 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:15:37,840 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 09:15:37,940 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 372ed390df7d7b8472dbfbb74e8f6c5064138e81a9b57bdfc345e31c2839b73c
2024-08-09 09:15:40,868 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0280731S
2024-08-09 09:15:40,868 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2843/test_user?loggerLevel=OFF)
2024-08-09 09:15:40,893 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 09:15:40,896 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 09:15:40,898 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 09:15:40,946 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 09:15:40,975 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 09:15:40,978 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 09:15:41,417 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-09 09:15:41,419 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(OrderId=2, date=2024-11-11, car=Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), user=null, status=successfully)]) is logging
2024-08-09 09:15:41,422 INFO  org.example.service.AuthServiceInMemory.loginUser:51 - Uncorrected input login qwerty and password qwerty
2024-08-09 09:15:41,425 INFO  org.example.service.AuthServiceInMemory.registeredUser:27 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 09:15:41,425 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:15:41,426 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:15:41,429 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 09:15:41,430 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 09:15:41,430 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 09:15:41,432 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:15:41,433 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:15:41,434 INFO  org.example.service.AuthServiceInMemory.edit:75 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 09:15:41,435 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:15:41,444 INFO  org.example.service.AuthServiceInMemory.delete:72 - Car with id - 1 removed
2024-08-09 09:15:41,451 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 09:15:41,452 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 09:15:41,453 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 09:15:41,455 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:15:41,455 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:15:41,456 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 09:15:41,457 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:15:41,459 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) updated
2024-08-09 09:15:41,460 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:15:41,460 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:15:41,559 INFO  org.example.service.AuthServiceInMemory.create:44 - Order - Order(OrderId=3, date=2024-10-10, car=Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), user=User(userId=2, login=manager1, password=manager1, name=John, age=36, city=New-York, role=null, orders=null), status=successfully) is created
2024-08-09 09:15:41,560 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:15:41,560 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:15:41,562 INFO  org.example.service.AuthServiceInMemory.filter:113 - Get all find orders
2024-08-09 09:15:41,565 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:15:41,566 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:15:41,567 INFO  org.example.service.AuthServiceInMemory.canceled:97 - Order with 2 id is canceled
2024-08-09 09:15:41,568 INFO  org.example.service.AuthServiceInMemory.changeStatus:83 - Change status on is ready, repository order with 1 id
2024-08-09 09:44:31,498 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 09:44:31,502 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 09:44:31,558 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 09:44:31,716 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 09:44:31,913 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 09:44:31,914 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 09:44:31,929 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 09:44:31,951 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 09:44:32,141 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 09:44:32,353 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 9b6b46c084c4b1fa610c2cc05d24528972f5f82c0a1bc70882721dfb4e9b60dc
2024-08-09 09:44:32,748 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7966717S
2024-08-09 09:44:32,753 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 09:44:32,753 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 09:44:32,754 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 09:44:32,754 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 09:44:32,968 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 2b1c532887677a2f354ea471fb834b26d58790ab0d8d06ea2f43e010ab78303c
2024-08-09 09:44:36,323 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.5690347S
2024-08-09 09:44:36,324 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3141/test_сar?loggerLevel=OFF)
2024-08-09 09:44:36,488 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 09:44:36,494 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:44:36,572 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:44:36,575 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:44:36,577 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:44:36,611 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 09:44:36,638 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 09:44:36,639 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 09:44:36,663 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:44:36,665 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 09:44:37,307 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 09:44:37,486 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 2d98b954485a71637745b6ad031a2871413425accf98c01fe3d51256d08e0fbe
2024-08-09 09:44:40,559 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2517418S
2024-08-09 09:44:40,560 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3152/test_user?loggerLevel=OFF)
2024-08-09 09:44:40,583 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 09:44:40,586 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 09:44:40,588 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 09:44:40,638 INFO  org.example.repository.jdbc.UserStorageJdbc.edit:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 09:44:40,668 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 09:44:40,671 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 09:44:41,239 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=[Roles.ADMINISTRATOR(title=Администратор)], orders=null) is logging
2024-08-09 09:44:41,241 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=[Roles.CLIENT(title=Клиент)], orders=[Order(orderId=2, userId=5, carId=4, date=2024-11-11, status=successfully)]) is logging
2024-08-09 09:44:41,245 INFO  org.example.service.AuthServiceInMemory.loginUser:51 - Uncorrected input login qwerty and password qwerty
2024-08-09 09:44:41,246 INFO  org.example.service.AuthServiceInMemory.registeredUser:27 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 09:44:41,247 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:44:41,247 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:44:41,251 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 09:44:41,252 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 09:44:41,253 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 09:44:41,254 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:44:41,255 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:44:41,256 INFO  org.example.service.AuthServiceInMemory.edit:75 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 09:44:41,256 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 09:44:41,265 INFO  org.example.service.AuthServiceInMemory.delete:72 - Car with id - 1 removed
2024-08-09 09:44:41,272 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 09:44:41,273 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 09:44:41,274 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 09:44:41,275 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:44:41,276 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:44:41,277 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 09:44:41,277 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:44:41,279 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) updated
2024-08-09 09:44:41,279 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:44:41,279 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 09:44:41,362 INFO  org.example.service.AuthServiceInMemory.create:44 - Order - Order(orderId=3, userId=6, carId=5, date=2024-10-10, status=successfully) is created
2024-08-09 09:44:41,363 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:44:41,363 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:44:41,365 INFO  org.example.service.AuthServiceInMemory.filter:113 - Get all find orders
2024-08-09 09:44:41,366 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:44:41,367 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 09:44:41,368 INFO  org.example.service.AuthServiceInMemory.canceled:97 - Order with 2 id is canceled
2024-08-09 09:44:41,370 INFO  org.example.service.AuthServiceInMemory.changeStatus:83 - Change status on is ready, repository order with 1 id
2024-08-09 11:30:50,439 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:30:50,443 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:30:50,662 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:30:50,845 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:30:51,058 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:30:51,059 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:30:51,073 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:30:51,092 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:30:51,278 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:30:51,427 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 42fd5ec036282093ed61a73561e263d698a5b3195c0238c60f1d3a3839c4d1d3
2024-08-09 11:30:51,799 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7075938S
2024-08-09 11:30:51,805 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:30:51,806 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:30:51,806 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:30:51,807 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:30:51,916 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 883fa923ef555c05b5968df01a1cddf249dd99b64aafb29493e4dce6ac5d86bd
2024-08-09 11:30:54,856 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0493544S
2024-08-09 11:30:54,858 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4341/test_orders?loggerLevel=OFF)
2024-08-09 11:30:55,006 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "car_shop.orders" does not exist
  Позиция: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:32:01,046 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:32:01,049 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:32:01,117 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:32:01,282 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:32:01,463 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:32:01,464 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:32:01,479 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:32:01,502 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:32:01,702 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:32:01,856 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3d666e78ddc17ee4f03e5ec4b7ea053e2885519cb90db881d76a102bf3691f32
2024-08-09 11:32:02,219 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.717166S
2024-08-09 11:32:02,224 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:32:02,224 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:32:02,225 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:32:02,225 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:32:02,355 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 334f3b1b3468d187e1e2ebc5025043382149af898761853f3f7e8021399035b8
2024-08-09 11:32:05,262 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0366469S
2024-08-09 11:32:05,263 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4353/test_сar?loggerLevel=OFF)
2024-08-09 11:32:05,425 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 11:32:05,431 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 11:32:05,499 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 11:32:05,501 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 11:32:05,503 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 11:32:05,535 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 11:32:05,563 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 11:32:05,564 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 11:32:05,591 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 11:32:05,593 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 11:32:31,021 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:32:31,025 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:32:31,080 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:32:31,246 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:32:31,427 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:32:31,428 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:32:31,441 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:32:31,465 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:32:31,671 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:32:31,810 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2c233a36933760925f670a35aa6ac359386ff71f89ecfdde49c3bfbf067eadad
2024-08-09 11:32:32,188 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7233717S
2024-08-09 11:32:32,193 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:32:32,193 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:32:32,194 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:32:32,195 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:32:32,326 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 818e392781b03fb97cc892d4a6db58d8564957682cc387e35e88cf3cc82921e2
2024-08-09 11:32:35,202 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0070393S
2024-08-09 11:32:35,202 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4372/test_orders?loggerLevel=OFF)
2024-08-09 11:32:35,346 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "car_shop.orders" does not exist
  Позиция: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:32:35,367 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "user" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:32:35,383 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "user" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:32:35,407 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "user" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:32:35,420 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "user" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:32:35,433 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: relation "user" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:33:26,041 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:33:26,045 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:33:26,265 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:33:26,429 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:33:26,600 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:33:26,602 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:33:26,616 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:33:26,636 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:33:26,839 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:33:26,989 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 9d0275570c81aac456d5af3e3bae4e022e88316c35d9723326d1a238a3f276d9
2024-08-09 11:33:27,336 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6989307S
2024-08-09 11:33:27,342 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:33:27,342 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:33:27,343 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:33:27,343 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:33:27,478 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4ec24e159755ccdd568347d6a27fe52008d1198aa2b11d3224460fbe3cdb4753
2024-08-09 11:33:30,435 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0916793S
2024-08-09 11:33:30,436 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4391/test_orders?loggerLevel=OFF)
2024-08-09 11:33:30,581 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: column "user_id" of relation "orders" does not exist
  Позиция: 30
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:35:37,570 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:35:37,574 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:35:37,772 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:35:37,953 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:35:38,133 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:35:38,134 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:35:38,147 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:35:38,165 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:35:38,359 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:35:38,516 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f242ab420f992b8e568ed3f8fb534c87fdfc9221927fab1dd26f521aa8dedc82
2024-08-09 11:35:38,874 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7083528S
2024-08-09 11:35:38,879 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:35:38,880 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:35:38,880 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:35:38,881 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:35:39,007 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: ede7c840f2f9267d74ca3cb85a1ced700bcedf0d40eee4157f3b765a885f4b8a
2024-08-09 11:35:41,944 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0629603S
2024-08-09 11:35:41,945 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4418/test_orders?loggerLevel=OFF)
2024-08-09 11:35:42,084 ERROR org.example.repository.jdbc.OrderStorageJdbcTest.setUp:63 - SQL got exception
org.postgresql.util.PSQLException: ERROR: column "date" is of type date but expression is of type integer
  Подсказка: You will need to rewrite or cast the expression.
  Позиция: 73
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at org.example.repository.jdbc.OrderStorageJdbcTest.setUp(OrderStorageJdbcTest.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 11:36:23,187 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:36:23,191 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:36:23,395 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:36:23,565 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:36:23,743 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:36:23,744 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:36:23,758 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:36:23,776 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:36:23,969 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:36:24,125 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 58df9f16227697c6e91f8d63583dd8cf2c4190ce0754a6acb42e9957dffd5411
2024-08-09 11:36:24,485 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7083816S
2024-08-09 11:36:24,489 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:36:24,489 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:36:24,490 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:36:24,490 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:36:24,609 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 8de88c9313f6ca72d5c1b8fbd9eb663e15a344c61319215520e81231729c8be4
2024-08-09 11:36:27,545 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0546698S
2024-08-09 11:36:27,546 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:4432/test_orders?loggerLevel=OFF)
2024-08-09 11:54:03,770 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:54:03,774 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:54:03,986 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:54:04,159 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:54:04,331 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:54:04,332 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:54:04,346 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:54:04,366 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:54:04,567 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:54:04,715 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 891a29e94a53d7865e1cee65e0e8fccd176b8849ceeef7317c9cc073725deb7b
2024-08-09 11:54:05,072 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7066471S
2024-08-09 11:54:05,076 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:54:05,077 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:54:05,077 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:54:05,078 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:54:05,200 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e1c8efc941f2c8e13a29746962381573452807be1a768a89f8e8de1b47717164
2024-08-09 11:54:08,621 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.543028S
2024-08-09 11:54:08,622 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:10018/test_orders?loggerLevel=OFF)
2024-08-09 11:56:55,726 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 11:56:55,730 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 11:56:55,932 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 11:56:56,099 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 11:56:56,274 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 11:56:56,275 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 11:56:56,288 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 11:56:56,308 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 11:56:56,512 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 11:56:56,678 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 78b832b823dd39a9f8c3c3eb7b2450179cdde06b351f5ed6924b15ed3c3e9e30
2024-08-09 11:56:57,042 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7340905S
2024-08-09 11:56:57,047 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 11:56:57,047 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 11:56:57,047 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 11:56:57,048 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 11:56:57,167 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 75fde9402699b0bdc925700e60f2e1e4283d217c4e2a55c45a9629577df2ca41
2024-08-09 11:57:00,104 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0555739S
2024-08-09 11:57:00,104 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:10051/test_сar?loggerLevel=OFF)
2024-08-09 12:00:11,771 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:00:11,775 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:00:11,829 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:00:11,998 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:00:12,188 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:00:12,189 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:00:12,205 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:00:12,225 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:00:12,436 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:00:12,589 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 2d5b7099ccd3c530b1ed6ce55529aa89b26bce7f0c7be4d4427829fa98a0c5b1
2024-08-09 12:00:12,948 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7228619S
2024-08-09 12:00:12,953 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:00:12,954 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:00:12,954 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:00:12,955 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:00:13,083 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1956ad25e4a538b8d00e919f75d930a01088f0bb688f81549f92c197b03c262a
2024-08-09 12:00:16,027 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0721657S
2024-08-09 12:00:16,028 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:10071/test_order?loggerLevel=OFF)
2024-08-09 12:04:06,030 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:04:06,035 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:04:06,250 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:04:06,413 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:04:06,593 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:04:36,971 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:04:36,976 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:04:37,209 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:04:37,377 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:04:37,558 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:04:53,399 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:04:53,404 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:04:53,609 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:04:53,774 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:04:53,947 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:04:53,948 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:04:53,961 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:04:53,980 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:04:54,183 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:04:54,336 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: b62a87e99515da83e27e430fe541d86cee5393e288e3c05b18cf14e6a1ac7fb3
2024-08-09 12:04:54,677 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.696961S
2024-08-09 12:04:54,682 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:04:54,683 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:04:54,683 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:04:54,684 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:04:54,817 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 2684cea4a8b8e7e2606db5f7eceed3352a10f765f36129d066c59118d982b239
2024-08-09 12:04:57,763 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.079654S
2024-08-09 12:04:57,764 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:10629/test_order?loggerLevel=OFF)
2024-08-09 12:05:19,111 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:05:19,115 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:05:19,320 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:05:19,489 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:05:19,664 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:05:19,665 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:05:19,680 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:05:19,701 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:05:19,908 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:05:20,083 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 457349e33d972c5c46706340e12fd6f3d354fda2ee6e713ccd733093e022c59e
2024-08-09 12:05:20,439 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7382596S
2024-08-09 12:05:20,444 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:05:20,445 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:05:20,446 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:05:20,447 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:05:20,577 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 22261d06127be873da572d7fac34093b7d93b717ba380fc01a6dc099e1575da0
2024-08-09 12:05:23,492 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.045432S
2024-08-09 12:05:23,493 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:10721/test_car?loggerLevel=OFF)
2024-08-09 12:13:49,093 ERROR org.example.repository.jdbc.OrderStorageJdbc.getAll:54 - Error fetching orders
org.postgresql.util.PSQLException: Колонки orderId не найдено в этом ResultSet’’е.
	at org.postgresql.jdbc.PgResultSet.findColumn(PgResultSet.java:3085)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2945)
	at org.example.repository.jdbc.OrderStorageJdbc.getAll(OrderStorageJdbc.java:46)
	at org.example.App.main(App.java:19)
2024-08-09 12:19:59,978 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:19:59,982 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:20:00,185 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:20:00,351 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:20:00,527 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:20:00,528 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:20:00,542 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:20:00,564 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:20:00,781 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:20:00,986 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 423df70e798ff287c84000148b27d29944d4e4743ac5f236a3f4496456a50bc8
2024-08-09 12:20:01,385 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8213813S
2024-08-09 12:20:01,390 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:20:01,390 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:20:01,391 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:20:01,392 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:20:01,597 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: d2f687f2546901a05314c06dd675450a934dc3df26820b5c83fe8856160549be
2024-08-09 12:20:04,684 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2920751S
2024-08-09 12:20:04,685 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13773/test_order?loggerLevel=OFF)
2024-08-09 12:22:53,688 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:22:53,692 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:22:53,894 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:22:54,063 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:22:54,238 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:22:54,239 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:22:54,254 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:22:54,276 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:22:54,469 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:22:54,624 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 307c3c6c370e0c275a9f5f2298aed2d1437939cb4c7db9f05b14e4e03fe348dc
2024-08-09 12:22:55,004 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7275833S
2024-08-09 12:22:55,010 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:22:55,010 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:22:55,011 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:22:55,011 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:22:55,136 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 87777f267b2d254a81b4174fab631752b783ac22adaeec334546efc8e7210cdb
2024-08-09 12:22:58,325 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3136209S
2024-08-09 12:22:58,326 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13822/test_order?loggerLevel=OFF)
2024-08-09 12:26:51,547 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:26:51,551 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:26:51,755 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:26:51,922 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:26:52,094 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:26:52,095 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:26:52,108 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:26:52,128 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:26:52,328 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:26:52,529 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 001f0a9fc857559db635ce88916402dca70d1e8236c296433f4b5f9d41fb3a3c
2024-08-09 12:26:52,950 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8217661S
2024-08-09 12:26:52,956 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:26:52,956 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:26:52,957 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:26:52,957 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:26:53,146 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1f49483444723bb7cbe82f81dc283603b4b3cfc53d760915f323db4a8049e9ab
2024-08-09 12:26:56,372 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4149673S
2024-08-09 12:26:56,373 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13867/test_order?loggerLevel=OFF)
2024-08-09 12:27:39,213 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 12:27:39,217 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 12:27:39,451 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 12:27:39,625 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 12:27:39,796 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 12:27:39,797 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 12:27:39,810 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 12:27:39,828 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 12:27:40,023 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 12:27:40,254 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: abe85a3c982d119e9f4c81988b00f9a7b606de35dd281bccd5e77b3a075b3148
2024-08-09 12:27:40,615 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7869061S
2024-08-09 12:27:40,620 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 12:27:40,621 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 12:27:40,621 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 12:27:40,622 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 12:27:40,761 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 48e52f8158a446594b608d62f0c4add47b5100a8a55190cde72499a8b4917f98
2024-08-09 12:27:43,670 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0485886S
2024-08-09 12:27:43,671 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:13877/test_order?loggerLevel=OFF)
2024-08-09 14:21:23,247 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:21:23,252 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:21:23,455 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:21:23,624 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:21:23,797 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:21:23,798 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:21:23,811 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:21:23,832 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:21:24,044 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:21:24,209 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 65fdbdcae353f39af0b76bf10c3a68483112e39d70f9feadd7191edcaeb67bd4
2024-08-09 14:21:24,559 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7268694S
2024-08-09 14:21:24,564 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:21:24,564 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:21:24,565 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:21:24,565 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:21:24,699 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 177dedf1246c490568db1655b76eb38dae3c9756e040f51ef43df371c322663e
2024-08-09 14:21:27,658 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0926396S
2024-08-09 14:21:27,658 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2666/test_order?loggerLevel=OFF)
2024-08-09 14:21:27,816 ERROR org.example.repository.jdbc.OrderStorageJdbc.getById:75 - Error fetching orders with id 1
org.postgresql.util.PSQLException: Can't use query methods that take a query string on a PreparedStatement.
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:123)
	at org.example.repository.jdbc.OrderStorageJdbc.getById(OrderStorageJdbc.java:65)
	at org.example.repository.jdbc.OrderStorageJdbcTest.getById(OrderStorageJdbcTest.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 14:25:59,043 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:25:59,047 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:25:59,245 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:25:59,422 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:25:59,601 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:25:59,602 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:25:59,616 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:25:59,634 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:25:59,827 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:25:59,976 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a97fc1643a7409274ff66d55cfaafa5c361285e3a97fb829e465dee8ca66ec66
2024-08-09 14:26:00,333 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6991022S
2024-08-09 14:26:00,338 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:26:00,338 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:26:00,339 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:26:00,339 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:26:00,457 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 85d2ff9c241afa2c62c621a75373f142aae1eacc4e6470e55e77f3f0a11219ec
2024-08-09 14:26:03,561 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2218108S
2024-08-09 14:26:03,562 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:2901/test_order?loggerLevel=OFF)
2024-08-09 14:26:03,727 ERROR org.example.repository.jdbc.OrderStorageJdbc.getById:71 - Error fetching orders with id 1
org.postgresql.util.PSQLException: Can't use query methods that take a query string on a PreparedStatement.
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:123)
	at org.example.repository.jdbc.OrderStorageJdbc.getById(OrderStorageJdbc.java:61)
	at org.example.repository.jdbc.OrderStorageJdbcTest.getById(OrderStorageJdbcTest.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 14:27:08,154 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:27:08,158 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:27:08,360 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:27:08,549 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:27:08,725 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:27:08,726 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:27:08,740 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:27:08,759 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:27:08,958 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:27:09,122 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: f2bd079621efdd4672fb032bb5ac3d0d8e1c11bde9ea8021656348203a246cb1
2024-08-09 14:27:09,496 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7367374S
2024-08-09 14:27:09,501 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:27:09,501 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:27:09,502 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:27:09,503 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:27:09,618 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 079b5862bc55d15a9e7f7691a4664bc9f7eedc599943cd448990f9bf2ca6d818
2024-08-09 14:27:12,497 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT2.9947933S
2024-08-09 14:27:12,498 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3168/test_order?loggerLevel=OFF)
2024-08-09 14:28:12,504 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:28:12,508 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:28:12,720 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:28:12,903 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:28:13,086 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:28:13,088 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:28:13,100 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:28:13,120 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:28:13,316 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:28:13,469 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e762bf4cc13ad66866ce75fd501f77b2903b06f448a48fbb6834c105c87cd4f0
2024-08-09 14:28:13,856 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7355209S
2024-08-09 14:28:13,861 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:28:13,862 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:28:13,862 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:28:13,863 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:28:13,989 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1684f8d95508a32da0b5a077a52fa4eb172089cd015d925a798c1fe6f0df121f
2024-08-09 14:28:16,964 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1018349S
2024-08-09 14:28:16,965 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3214/test_order?loggerLevel=OFF)
2024-08-09 14:28:37,766 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:28:37,770 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:28:37,978 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:28:38,144 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:28:38,326 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:28:38,328 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:28:38,341 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:28:38,362 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:28:38,561 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:28:38,703 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 68c7e05679282f3162b530b6d3d2fc94d0fd4444d556ebc98b281f3b8f67706c
2024-08-09 14:28:39,025 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.663581S
2024-08-09 14:28:39,030 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:28:39,031 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:28:39,031 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:28:39,032 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:28:39,152 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 625f4e3cd131c5cce09591278921b0282e383a7b01f606277c450ae57c9ce667
2024-08-09 14:28:42,076 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0440182S
2024-08-09 14:28:42,077 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3270/test_order?loggerLevel=OFF)
2024-08-09 14:33:50,123 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:33:50,127 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:33:50,343 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:33:50,521 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:33:50,710 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:33:50,711 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:33:50,724 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:33:50,745 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:33:50,936 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:33:51,106 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e54e0300f93f1ae5f0525a70d8b10045b3b86ae74c85959ba446c27f4a592b0f
2024-08-09 14:33:51,467 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7216601S
2024-08-09 14:33:51,471 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:33:51,472 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:33:51,472 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:33:51,473 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:33:51,606 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 6a5ff7abbb655cd3432df0b3cfbf0dbbff51a8297221f5dba78493b9110d0b3c
2024-08-09 14:33:54,691 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2187232S
2024-08-09 14:33:54,692 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:3574/test_order?loggerLevel=OFF)
2024-08-09 14:33:54,845 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:87 - Get all find orders
2024-08-09 14:56:40,877 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:56:40,881 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:56:41,082 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:56:41,251 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:56:41,423 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:56:41,425 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:56:41,437 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:56:41,457 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:56:41,665 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:56:41,796 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 55bee53707bd6c9e3804288c9430d2a04706f1303a45efb39b9b86fa4b87700d
2024-08-09 14:56:42,180 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7227713S
2024-08-09 14:56:42,185 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:56:42,185 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:56:42,186 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:56:42,186 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:56:42,323 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 455eff9349b76cfae1ecb4d7dd68dfb68de459b85a3d093312b0bec246046a74
2024-08-09 14:56:45,286 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0990416S
2024-08-09 14:56:45,286 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5601/test_order?loggerLevel=OFF)
2024-08-09 14:57:29,263 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:57:29,267 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:57:29,470 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:57:29,636 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:57:29,813 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:57:29,815 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:57:29,828 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:57:29,850 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:57:30,047 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:57:30,170 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 0b45ce8739fb106c84933ff6d3bf4a4306e81580bde387e6eae0931625dadfd9
2024-08-09 14:57:30,522 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6722034S
2024-08-09 14:57:30,527 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:57:30,527 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:57:30,528 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:57:30,528 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:57:30,642 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: bbcfea854192b44d9193650b5bdf169dd851dc765cbff164f409481b7a92b987
2024-08-09 14:57:33,561 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.032339S
2024-08-09 14:57:33,561 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5633/test_order?loggerLevel=OFF)
2024-08-09 14:59:32,379 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 14:59:32,383 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 14:59:32,584 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 14:59:32,748 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 14:59:32,922 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 14:59:32,923 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 14:59:32,936 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 14:59:32,956 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 14:59:33,166 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 14:59:33,304 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 77f517359e9923bf32cc66244c1acdc0ec54e7ccb1903484ade344c117ceb8d1
2024-08-09 14:59:33,692 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7360254S
2024-08-09 14:59:33,697 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 14:59:33,698 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 14:59:33,698 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 14:59:33,699 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 14:59:33,818 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: bb9bb308803080019e27ffc7a463caf6ccfcff79d3fad6ae9d6ba05e2984fea4
2024-08-09 14:59:36,809 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.1105676S
2024-08-09 14:59:36,810 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:5643/test_order?loggerLevel=OFF)
2024-08-09 15:20:29,810 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:20:29,814 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:20:30,015 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:20:30,181 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:20:30,354 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:20:30,355 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:20:30,370 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:20:30,389 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:20:30,583 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:20:30,720 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 0389935f4c3941b9306e42d9e4c6c620db37db960f5ba11ba4370e4b84bf9b7a
2024-08-09 15:20:31,049 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.6595705S
2024-08-09 15:20:31,053 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:20:31,054 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:20:31,054 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:20:31,055 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:20:31,172 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a454b87fe561d6297dbf65a22bf59d4d0d637ca6b28efb946252d226d1c9f224
2024-08-09 15:20:34,124 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0697267S
2024-08-09 15:20:34,125 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7093/test_order?loggerLevel=OFF)
2024-08-09 15:21:34,307 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:21:34,312 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:21:34,515 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:21:34,688 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:21:34,866 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:21:34,867 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:21:34,880 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:21:34,900 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:21:35,097 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:21:35,264 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a13d9f74bf19b4a12fa012821edd144803ee8cdc2271cb326d867eb1e2cf4783
2024-08-09 15:21:35,646 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7463877S
2024-08-09 15:21:35,651 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:21:35,651 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:21:35,652 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:21:35,652 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:21:35,781 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: f9ddcb66a6aef8961cbd1537555bbecd1b3139e6e9a8290b33acf8d7dc93a56e
2024-08-09 15:21:38,730 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0774643S
2024-08-09 15:21:38,730 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7164/test_order?loggerLevel=OFF)
2024-08-09 15:22:37,201 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:22:37,205 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:22:37,425 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:22:37,593 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:22:37,774 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:22:37,775 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:22:37,789 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:22:37,807 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:22:38,000 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:22:38,156 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: a1fe2d6b435b4e34ab6a21ab9477f48a7612e042fb815744e68125d94429a8e0
2024-08-09 15:22:38,520 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7119448S
2024-08-09 15:22:38,525 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:22:38,526 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:22:38,527 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:22:38,527 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:22:38,659 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: ec4a43bafb813f5fbf4ec5b0d6de3a21af9d2e8bdbeb50357ef1cf5eb10a47ba
2024-08-09 15:22:41,603 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0763592S
2024-08-09 15:22:41,605 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7317/test_order?loggerLevel=OFF)
2024-08-09 15:26:56,755 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:26:56,759 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:26:56,972 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:26:57,137 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:26:57,311 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:26:57,312 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:26:57,326 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:26:57,345 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:26:57,543 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:26:57,774 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 30b98d109ffc9859a7c94a3a00d4133704eca61b906ae601dffb8f0659c27f6a
2024-08-09 15:26:58,167 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8219104S
2024-08-09 15:26:58,172 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:26:58,173 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:26:58,173 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:26:58,174 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:26:58,373 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: b0ff2342d6dc11b8b0f4c7488c4334a9387adfc402048f1e8038d785db5f6dc5
2024-08-09 15:27:01,516 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.342447S
2024-08-09 15:27:01,517 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7588/test_order?loggerLevel=OFF)
2024-08-09 15:27:12,733 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:27:12,738 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:27:12,955 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:27:13,125 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:27:13,296 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:27:13,298 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:27:13,312 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:27:13,331 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:27:13,532 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:27:13,745 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 8d36faef539a5058d9b26854d3e9d96bbe78cdb288d164aeb42c4ac67503fc66
2024-08-09 15:27:14,187 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8559791S
2024-08-09 15:27:14,193 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:27:14,194 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:27:14,195 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:27:14,196 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:27:14,385 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a4e634ac05fc6ba81d710d270362d18180fe78df5e52b580ccfbac55664175f2
2024-08-09 15:27:17,554 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3583052S
2024-08-09 15:27:17,555 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7596/test_order?loggerLevel=OFF)
2024-08-09 15:29:46,648 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:29:46,651 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:29:46,850 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:29:47,020 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:29:47,192 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:29:47,193 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:29:47,207 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:29:47,229 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:29:47,433 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:29:47,596 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: e487a6bf1927d7846adc0ffdbd65116ea11ac0e50d64c852c0b7f48583e4ecbc
2024-08-09 15:29:47,986 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7570102S
2024-08-09 15:29:47,990 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:29:47,991 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:29:47,992 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:29:47,992 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:29:48,134 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 23bb5b0128be91f3b9b6c8c55b4c3106376bbf7667fd5447096def81b039aa99
2024-08-09 15:29:51,232 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2404096S
2024-08-09 15:29:51,233 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:7926/test_order?loggerLevel=OFF)
2024-08-09 15:32:39,905 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:32:39,909 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:32:39,964 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:32:40,131 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:32:40,314 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:32:40,316 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:32:40,330 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:32:40,354 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:32:40,555 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:32:40,760 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 3616eb23892cf088aae220dd21e2634e5b11715a04f61de45e19c9ec323376f8
2024-08-09 15:32:41,124 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7700144S
2024-08-09 15:32:41,130 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:32:41,130 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:32:41,131 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:32:41,131 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:32:41,437 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 95168dbee221f7beebba291ba68eb35c9a377e9aff68ebe1fae770882773c505
2024-08-09 15:32:44,609 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4782175S
2024-08-09 15:32:44,610 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:8260/test_order?loggerLevel=OFF)
2024-08-09 15:32:44,853 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:99 - Get all find orders
2024-08-09 15:39:16,713 INFO  org.example.service.AuthServiceInMemory.delete:72 - Car with id - 1 removed
2024-08-09 15:39:16,757 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 15:39:16,759 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 15:39:16,760 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 15:39:16,770 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 15:39:16,771 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 15:39:16,772 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 15:39:16,778 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 15:39:16,779 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:52 - Car Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) added
2024-08-09 15:39:16,780 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 15:39:16,780 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 15:39:16,808 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:39:16,810 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:39:16,866 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:39:17,017 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:39:17,183 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:39:17,185 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:39:17,198 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:39:17,217 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:39:17,413 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:39:17,624 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 205fb3f4b51df02fa79f27dee85d154265ed86212cb334898d04e82c4c01e059
2024-08-09 15:39:18,028 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8104118S
2024-08-09 15:39:18,033 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:39:18,033 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:39:18,034 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:39:18,034 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:39:18,223 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 0aad0919fb3a2a0a9f459c9ffeb4d19fc8001f2855ab7f44790e3d46cb1425fd
2024-08-09 15:39:21,450 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.4160012S
2024-08-09 15:39:21,451 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:8763/test_сar?loggerLevel=OFF)
2024-08-09 15:39:21,593 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 15:39:21,598 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,625 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,627 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,628 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,654 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 15:39:21,678 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,679 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,710 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:21,713 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:22,322 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:39:22,503 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 5ca8b072dd4b29af4b3b39fd1c8e213e2cf7c8d660e438e78743998cd579986c
2024-08-09 15:39:25,603 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2813215S
2024-08-09 15:39:25,604 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:8774/test_user?loggerLevel=OFF)
2024-08-09 15:39:25,629 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 15:39:25,631 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 15:39:25,632 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 15:39:25,680 INFO  org.example.repository.jdbc.UserStorageJdbc.update:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 15:39:25,709 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 15:39:25,710 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 15:39:26,317 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:39:26,485 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 52af7ef7627bfa1bfac55b03ea36c7fe38e63a6991c1a1017d65173886916eaa
2024-08-09 15:39:29,639 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.322282S
2024-08-09 15:39:29,640 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:8783/test_order?loggerLevel=OFF)
2024-08-09 15:39:29,691 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:99 - Get all find orders
2024-08-09 15:39:30,360 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 15:39:30,361 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 15:39:30,361 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 15:39:30,363 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 15:39:30,363 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 15:39:30,365 INFO  org.example.service.AuthServiceInMemory.update:75 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 15:39:30,365 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 15:39:30,459 INFO  org.example.service.AuthServiceInMemory.create:44 - Order - Order(orderId=3, userId=3, carId=5, date=2024-10-10, status=successfully) is created
2024-08-09 15:39:30,463 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 15:39:30,463 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 15:39:30,464 INFO  org.example.service.AuthServiceInMemory.filter:113 - Get all find orders
2024-08-09 15:39:30,466 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 15:39:30,467 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 15:39:30,467 INFO  org.example.service.AuthServiceInMemory.canceled:97 - Order with 2 id is canceled
2024-08-09 15:39:30,468 INFO  org.example.service.AuthServiceInMemory.changeStatus:83 - Change status on is ready, repository order with 1 id
2024-08-09 15:39:30,472 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=null, orders=null) is logging
2024-08-09 15:39:30,472 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=null, orders=null) is logging
2024-08-09 15:39:30,473 INFO  org.example.service.AuthServiceInMemory.loginUser:51 - Uncorrected input login qwerty and password qwerty
2024-08-09 15:39:30,474 INFO  org.example.service.AuthServiceInMemory.registeredUser:27 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 15:39:30,474 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 15:39:30,474 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 15:39:37,772 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:39:37,776 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:39:37,832 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:39:38,003 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:39:38,208 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:39:38,209 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:39:38,229 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:39:38,254 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:39:38,453 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:39:38,658 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 36fc64f8700560ff2b574056a08eb3c58a298b273116200cad09179dcef2e7a2
2024-08-09 15:39:39,041 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7871293S
2024-08-09 15:39:39,047 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:39:39,047 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:39:39,048 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:39:39,048 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:39:39,246 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 8f2faba9f81a798f1bb2ef5bbf2bd3e294dc64c685457dfe5de3c3de86b485d1
2024-08-09 15:39:42,363 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3152163S
2024-08-09 15:39:42,364 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:8802/test_сar?loggerLevel=OFF)
2024-08-09 15:39:42,528 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 15:39:42,535 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:42,609 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:42,612 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:42,614 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:42,651 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 15:39:42,682 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:39:42,683 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:39:42,711 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:39:42,713 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:06,326 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:50:06,330 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:50:06,384 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:50:06,549 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:50:06,738 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:50:06,740 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:50:06,755 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:50:06,777 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:50:06,977 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:50:07,143 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 7824433e51cd62028b81c1ed6fb9c27a68c20755bd536b47af0ae191f005a702
2024-08-09 15:50:07,500 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7236196S
2024-08-09 15:50:07,507 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:50:07,507 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:50:07,508 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:50:07,508 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:50:07,646 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 71316acb782d4de5aeffecb6eebd49c517f0de2aa28118899795516dc6f9e4d7
2024-08-09 15:50:10,741 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2336647S
2024-08-09 15:50:10,742 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:9383/test_сar?loggerLevel=OFF)
2024-08-09 15:50:10,907 ERROR org.example.repository.jdbc.CarStorageJdbc.delete:78 - Error deleting car with id 4
org.postgresql.util.PSQLException: ERROR: update or delete on table "car" violates foreign key constraint "fk_orders_car" on table "orders"
  Подробности: Key (car_id)=(4) is still referenced from table "orders".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:155)
	at org.example.repository.jdbc.CarStorageJdbc.delete(CarStorageJdbc.java:75)
	at org.example.repository.jdbc.CarStorageJdbcTest.delete(CarStorageJdbcTest.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 15:50:10,914 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:11,005 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:11,007 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:11,009 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:11,043 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 15:50:11,071 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:50:11,072 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:50:11,097 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:11,099 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:26,093 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:50:26,096 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:50:26,153 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:50:26,324 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:50:26,504 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:50:26,505 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:50:26,519 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:50:26,540 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:50:26,751 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:50:26,895 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 97e65b25223b1b0577426ef0ff392534c0831f7a31479de5b677870fabfb17d9
2024-08-09 15:50:27,234 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.694259S
2024-08-09 15:50:27,240 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:50:27,241 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:50:27,241 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:50:27,242 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:50:27,366 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 6bc9d0eee47dc8ab22b865749ab8b530256dd981baabc77a62037c8f83241849
2024-08-09 15:50:30,217 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT2.9748125S
2024-08-09 15:50:30,218 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:9423/test_сar?loggerLevel=OFF)
2024-08-09 15:50:30,386 ERROR org.example.repository.jdbc.CarStorageJdbc.delete:78 - Error deleting car with id 4
org.postgresql.util.PSQLException: ERROR: update or delete on table "car" violates foreign key constraint "fk_orders_car" on table "orders"
  Подробности: Key (car_id)=(4) is still referenced from table "orders".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:155)
	at org.example.repository.jdbc.CarStorageJdbc.delete(CarStorageJdbc.java:75)
	at org.example.repository.jdbc.CarStorageJdbcTest.delete(CarStorageJdbcTest.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-08-09 15:50:30,393 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:30,474 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:30,475 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:30,477 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:30,506 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 15:50:30,532 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:50:30,533 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:50:30,557 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:50:30,559 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:53:07,165 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:53:07,169 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:53:07,224 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:53:07,390 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:53:07,573 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:53:07,574 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:53:07,588 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:53:07,609 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:53:07,812 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:53:07,970 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 38df52f9fc699a7305345b508d2d3bbd583db5179e37b44a1d8477080443eb85
2024-08-09 15:53:08,317 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.707932S
2024-08-09 15:53:08,322 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:53:08,322 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:53:08,323 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:53:08,323 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:53:08,447 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1eb17939dc0da954f301a64b9cc8cc381f8c0ced9f1b540d0332ade0fd0663fc
2024-08-09 15:53:11,393 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0697866S
2024-08-09 15:53:11,394 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:9634/test_db?loggerLevel=OFF)
2024-08-09 15:53:11,571 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 15:53:11,577 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:53:11,653 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:53:11,656 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:53:11,658 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:53:11,695 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 15:53:11,721 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:53:11,723 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 15:53:11,749 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:53:11,751 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 15:58:03,875 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 15:58:03,879 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 15:58:03,932 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 15:58:04,093 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 15:58:04,277 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 15:58:04,279 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 15:58:04,293 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 15:58:04,321 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 15:58:04,532 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 15:58:04,666 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: c7a91a99dc545c2864d0a0c3a7a8d1aa93f5b9af0663866ab27afe9c39b9e155
2024-08-09 15:58:05,053 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7314773S
2024-08-09 15:58:05,058 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 15:58:05,059 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 15:58:05,059 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 15:58:05,060 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 15:58:05,186 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 4e9087ea71771369fd122481ad3ebcff68ae5e043c69329dfd087a3ca4ef769f
2024-08-09 15:58:08,148 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0877072S
2024-08-09 15:58:08,149 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:10158/test_db?loggerLevel=OFF)
2024-08-09 15:58:08,376 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:99 - Get all find orders
2024-08-09 16:37:45,446 INFO  org.example.service.AuthServiceInMemory.delete:72 - Car with id - 1 removed
2024-08-09 16:37:45,491 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:37:45,494 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:37:45,495 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:37:45,505 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:37:45,506 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:37:45,507 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 16:37:45,515 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:37:45,517 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:52 - Car Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) added
2024-08-09 16:37:45,518 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:37:45,518 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:37:45,550 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 16:37:45,552 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 16:37:45,611 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 16:37:45,757 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 16:37:45,937 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 16:37:45,938 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 16:37:45,952 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 16:37:45,971 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 16:37:46,158 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 16:37:46,315 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: b8c1299333e0ef231a2a06976bd315c57d6eb437efdce204306213524fddc089
2024-08-09 16:37:46,703 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7327646S
2024-08-09 16:37:46,708 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 16:37:46,709 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 16:37:46,709 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 16:37:46,709 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:37:46,838 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: fd7c5be6890c19d4aec100262c65381ed036f73e0f563357e20d77d1658838eb
2024-08-09 16:37:49,782 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.0734364S
2024-08-09 16:37:49,784 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11375/test_db?loggerLevel=OFF)
2024-08-09 16:37:49,929 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 16:37:49,936 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:49,969 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:49,971 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:49,973 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:50,002 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 16:37:50,030 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:50,031 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:50,067 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:50,069 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:37:50,722 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:37:50,906 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: d6a67ef88415ea38ff718b598e1b378e712153040930be4b54cccdb456f9e3e0
2024-08-09 16:37:54,070 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.347736S
2024-08-09 16:37:54,071 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11386/test_db?loggerLevel=OFF)
2024-08-09 16:37:54,096 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:37:54,099 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:37:54,100 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:37:54,149 INFO  org.example.repository.jdbc.UserStorageJdbc.update:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 16:37:54,180 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 16:37:54,182 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 16:37:54,844 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:37:55,022 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: c5df261de00a789b91bd93a6ffb1a2e269d2a147a76a2e1753cf08b257e14bb8
2024-08-09 16:37:58,222 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3780376S
2024-08-09 16:37:58,222 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11395/test_db?loggerLevel=OFF)
2024-08-09 16:37:58,274 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:99 - Get all find orders
2024-08-09 16:37:58,985 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:37:58,986 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:37:58,986 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:37:58,988 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:37:58,988 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:37:58,989 INFO  org.example.service.AuthServiceInMemory.update:75 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 16:37:58,990 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:37:59,088 INFO  org.example.service.AuthServiceInMemory.create:44 - Order - Order(orderId=3, userId=3, carId=5, date=2024-10-10, status=successfully) is created
2024-08-09 16:37:59,092 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:37:59,092 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:37:59,094 INFO  org.example.service.AuthServiceInMemory.filter:113 - Get all find orders
2024-08-09 16:37:59,095 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:37:59,096 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:37:59,097 INFO  org.example.service.AuthServiceInMemory.canceled:97 - Order with 2 id is canceled
2024-08-09 16:37:59,098 INFO  org.example.service.AuthServiceInMemory.changeStatus:83 - Change status on is ready, repository order with 1 id
2024-08-09 16:37:59,101 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=null, orders=null) is logging
2024-08-09 16:37:59,102 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=null, orders=null) is logging
2024-08-09 16:37:59,102 INFO  org.example.service.AuthServiceInMemory.loginUser:51 - Uncorrected input login qwerty and password qwerty
2024-08-09 16:37:59,103 INFO  org.example.service.AuthServiceInMemory.registeredUser:27 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 16:37:59,103 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:37:59,103 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:38:24,155 INFO  org.example.service.AuthServiceInMemory.delete:72 - Car with id - 1 removed
2024-08-09 16:38:24,199 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:38:24,202 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:38:24,203 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:38:24,213 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:38:24,214 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:38:24,215 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 16:38:24,221 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:38:24,223 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:52 - Car Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) added
2024-08-09 16:38:24,223 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:38:24,223 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:38:24,254 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 16:38:24,256 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 16:38:24,311 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 16:38:24,460 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 16:38:24,634 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 16:38:24,635 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 16:38:24,649 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 16:38:24,666 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 16:38:24,855 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 16:38:25,070 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 512bc826242bcc7839f6056ca8c355a802a25766984dfb5e9bc002c1208a0650
2024-08-09 16:38:25,476 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8100825S
2024-08-09 16:38:25,480 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 16:38:25,481 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 16:38:25,481 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 16:38:25,482 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:38:25,671 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 1ab705f2441a1aac9e135a80ba3a568da4bedbf3602ab975605ca72361e6d5bd
2024-08-09 16:38:28,715 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2331604S
2024-08-09 16:38:28,716 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11415/test_db?loggerLevel=OFF)
2024-08-09 16:38:28,859 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 16:38:28,866 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:28,895 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:28,897 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:28,900 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:28,931 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 16:38:28,959 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:28,960 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:28,998 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:29,001 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:38:29,593 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:38:29,768 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: a8c306b5bae6ce13cfc7a3f65468b0342b24df649da4d628272d92c891fc4deb
2024-08-09 16:38:32,864 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.2705037S
2024-08-09 16:38:32,864 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11426/test_db?loggerLevel=OFF)
2024-08-09 16:38:32,888 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:38:32,891 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:38:32,892 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:38:32,940 INFO  org.example.repository.jdbc.UserStorageJdbc.update:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 16:38:32,968 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 16:38:32,971 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 16:38:33,557 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:38:33,740 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 301a799d57180e0b3bed5076335bcc67151855320f361622fe11cd430123869c
2024-08-09 16:38:36,872 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3144707S
2024-08-09 16:38:36,872 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:11436/test_db?loggerLevel=OFF)
2024-08-09 16:38:36,923 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:99 - Get all find orders
2024-08-09 16:38:37,773 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:38:37,774 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:38:37,774 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:38:37,775 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:38:37,775 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:38:37,776 INFO  org.example.service.AuthServiceInMemory.update:75 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 16:38:37,776 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:38:37,878 INFO  org.example.service.AuthServiceInMemory.create:44 - Order - Order(orderId=3, userId=3, carId=5, date=2024-10-10, status=successfully) is created
2024-08-09 16:38:37,880 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:38:37,880 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:38:37,882 INFO  org.example.service.AuthServiceInMemory.filter:113 - Get all find orders
2024-08-09 16:38:37,885 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:38:37,886 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:38:37,888 INFO  org.example.service.AuthServiceInMemory.canceled:97 - Order with 2 id is canceled
2024-08-09 16:38:37,890 INFO  org.example.service.AuthServiceInMemory.changeStatus:83 - Change status on is ready, repository order with 1 id
2024-08-09 16:38:37,894 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=null, orders=null) is logging
2024-08-09 16:38:37,894 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=null, orders=null) is logging
2024-08-09 16:38:37,895 INFO  org.example.service.AuthServiceInMemory.loginUser:51 - Uncorrected input login qwerty and password qwerty
2024-08-09 16:38:37,896 INFO  org.example.service.AuthServiceInMemory.registeredUser:27 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 16:38:37,897 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:38:37,897 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:41:00,724 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 16:41:00,729 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 16:41:00,955 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 16:41:01,120 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 16:41:01,309 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 16:41:01,310 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 16:41:01,325 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 16:41:01,360 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 16:41:01,570 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 16:41:01,795 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: c51fa6778969da80ed17a82bb802890e1c84282ba4496c423a6633adc70ef082
2024-08-09 16:41:02,173 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.8125762S
2024-08-09 16:41:02,178 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 16:41:02,178 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 16:41:02,179 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 16:41:02,179 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:41:02,382 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: 18e435a1f91d9ce5758879145248dd116ab6127323e83dfa543f80903d5a6860
2024-08-09 16:41:05,682 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.5029609S
2024-08-09 16:41:05,683 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12566/test_db?loggerLevel=OFF)
2024-08-09 16:41:05,863 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 16:41:05,871 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 16:41:05,873 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=6, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good)]
2024-08-09 16:41:17,823 INFO  org.example.service.AuthServiceInMemory.delete:72 - Car with id - 1 removed
2024-08-09 16:41:17,870 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:41:17,873 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:41:17,874 INFO  org.example.service.AuthServiceInMemory.filter:89 - Get all find cars
2024-08-09 16:41:17,886 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:41:17,886 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:41:17,888 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:57 - Car Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good) updated
2024-08-09 16:41:17,895 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:41:17,897 INFO  org.example.service.AuthServiceInMemory.saveOrUpdate:52 - Car Car(id=0, brand=Toyota, model=Camry, year=2022, price=15800.0, condition=good) added
2024-08-09 16:41:17,897 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:41:17,897 INFO  org.example.service.AuthServiceInMemory.getAll:36 - Get all cars
2024-08-09 16:41:17,932 INFO  org.testcontainers.images.PullPolicy.defaultPolicy:59 - Image pull policy will be performed by: DefaultPullPolicy()
2024-08-09 16:41:17,934 INFO  org.testcontainers.utility.ImageNameSubstitutor.instance:55 - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-08-09 16:41:17,994 INFO  org.testcontainers.DockerClientFactory.getOrInitializeStrategy:148 - Testcontainers version: 1.20.1
2024-08-09 16:41:18,141 INFO  o.t.dockerclient.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9:383 - Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-08-09 16:41:18,313 INFO  o.t.dockerclient.DockerClientProviderStrategy.tryOutStrategy:293 - Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)
2024-08-09 16:41:18,315 INFO  org.testcontainers.DockerClientFactory.client:206 - Docker host IP address is localhost
2024-08-09 16:41:18,329 INFO  org.testcontainers.DockerClientFactory.client:213 - Connected to docker: 
  Server Version: 24.0.7
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 15849 MB
2024-08-09 16:41:18,348 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:387 - Creating container for image: testcontainers/ryuk:0.8.1
2024-08-09 16:41:18,547 INFO  org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider:292 - Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
2024-08-09 16:41:18,731 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:451 - Container testcontainers/ryuk:0.8.1 is starting: 946f912028355ae9bd4a88e8150baf092a21cc81ceda31f3a429c962fd9e8d9e
2024-08-09 16:41:19,106 INFO  tc.testcontainers/ryuk:0.8.1.tryStart:541 - Container testcontainers/ryuk:0.8.1 started in PT0.7583765S
2024-08-09 16:41:19,111 INFO  org.testcontainers.utility.RyukResourceReaper.init:43 - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-08-09 16:41:19,111 INFO  org.testcontainers.DockerClientFactory.client:243 - Checking the system...
2024-08-09 16:41:19,111 INFO  org.testcontainers.DockerClientFactory.check:264 - ✔︎ Docker server version should be at least 1.6.0
2024-08-09 16:41:19,112 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:41:19,228 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: f6bdf60c8b2955430e7f2145a37b2cc6d010274813694f5c16ee18d05c4c6e89
2024-08-09 16:41:22,178 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.066015S
2024-08-09 16:41:22,178 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12617/test_db?loggerLevel=OFF)
2024-08-09 16:41:22,329 INFO  org.example.repository.jdbc.CarStorageJdbc.delete:76 - Car with id 4 is deleting
2024-08-09 16:41:22,335 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,366 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,368 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,370 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,400 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good), Car(id=4, brand=BMW, model=S60, year=2021, price=25000.0, condition=good)]
2024-08-09 16:41:22,427 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,429 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,430 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,465 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:22,467 INFO  org.example.repository.jdbc.CarStorageJdbc.getAll:47 - Get all cars [Car(id=1, brand=BMW, model=M4, year=2024, price=25000.0, condition=new), Car(id=2, brand=Volvo, model=S40, year=2023, price=17500.0, condition=good), Car(id=3, brand=Mercedes, model=SLS, year=2024, price=25000.0, condition=new), Car(id=4, brand=Volvo, model=S60, year=2019, price=25000.0, condition=good), Car(id=5, brand=Audi, model=Q3, year=2020, price=19500.8, condition=good)]
2024-08-09 16:41:23,092 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:41:23,258 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e38e5f56263cf0616404c6c0be9adb08196d9232a27d1cf830c27eb7171d2d7c
2024-08-09 16:41:26,634 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.5425008S
2024-08-09 16:41:26,635 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12636/test_db?loggerLevel=OFF)
2024-08-09 16:41:26,660 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:41:26,663 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:41:26,665 INFO  org.example.repository.jdbc.UserStorageJdbc.filter:53 - Get all users after filter
2024-08-09 16:41:26,714 INFO  org.example.repository.jdbc.UserStorageJdbc.update:66 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 16:41:26,745 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 16:41:26,747 INFO  org.example.repository.jdbc.UserStorageJdbc.sort:59 - Get all users after sort
2024-08-09 16:41:27,404 INFO  tc.postgres:16.3.tryStart:387 - Creating container for image: postgres:16.3
2024-08-09 16:41:27,590 INFO  tc.postgres:16.3.tryStart:451 - Container postgres:16.3 is starting: e698064bb116c8f95ad773b80aba4441e83f43b789049215d531b6071db52b7f
2024-08-09 16:41:30,744 INFO  tc.postgres:16.3.tryStart:541 - Container postgres:16.3 started in PT3.3406969S
2024-08-09 16:41:30,745 INFO  tc.postgres:16.3.containerIsStarted:219 - Container is started (JDBC URL: jdbc:postgresql://localhost:12658/test_db?loggerLevel=OFF)
2024-08-09 16:41:30,800 INFO  org.example.repository.jdbc.OrderStorageJdbc.filter:99 - Get all find orders
2024-08-09 16:41:31,469 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:41:31,470 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:41:31,470 INFO  org.example.service.AuthServiceInMemory.filter:49 - Get all users after filter
2024-08-09 16:41:31,472 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:41:31,472 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:41:31,473 INFO  org.example.service.AuthServiceInMemory.update:75 - User User(userId=5, login=client222, password=client222, name=Pavel, age=45, city=Ivanovo, role=null, orders=null) user was changed
2024-08-09 16:41:31,474 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:41:31,583 INFO  org.example.service.AuthServiceInMemory.create:44 - Order - Order(orderId=3, userId=3, carId=5, date=2024-10-10, status=successfully) is created
2024-08-09 16:41:31,587 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:41:31,588 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:41:31,589 INFO  org.example.service.AuthServiceInMemory.filter:113 - Get all find orders
2024-08-09 16:41:31,592 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:41:31,593 INFO  org.example.service.AuthServiceInMemory.getAll:59 - Show all orders
2024-08-09 16:41:31,594 INFO  org.example.service.AuthServiceInMemory.canceled:97 - Order with 2 id is canceled
2024-08-09 16:41:31,596 INFO  org.example.service.AuthServiceInMemory.changeStatus:83 - Change status on is ready, repository order with 1 id
2024-08-09 16:41:31,599 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=1, login=admin, password=admin, name=Alexandr, age=33, city=Moscow, role=null, orders=null) is logging
2024-08-09 16:41:31,600 INFO  org.example.service.AuthServiceInMemory.loginUser:47 - User User(userId=4, login=client1, password=client1, name=Tanya, age=25, city=London, role=null, orders=null) is logging
2024-08-09 16:41:31,600 INFO  org.example.service.AuthServiceInMemory.loginUser:51 - Uncorrected input login qwerty and password qwerty
2024-08-09 16:41:31,601 INFO  org.example.service.AuthServiceInMemory.registeredUser:27 - New user is User(userId=0, login=master, password=master, name=Tom, age=78, city=Tokyo, role=null, orders=null) added
2024-08-09 16:41:31,602 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
2024-08-09 16:41:31,602 INFO  org.example.service.AuthServiceInMemory.getAll:35 - Get all users
