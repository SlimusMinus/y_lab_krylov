package org.example.service;

import org.example.model.User;
/**
 * Интерфейс для аутентификации и регистрации пользователей.
 *
 * <p>Этот интерфейс определяет методы для регистрации нового пользователя и аутентификации существующих пользователей.</p>
 */
public interface AuthService {
    /**
     * Регистрация нового пользователя в системе.
     *
     * <p>Метод сохраняет информацию о новом пользователе, включая логин, пароль, имя, возраст, город и роль.</p>
     *
     * @param user объект {@link User}, содержащий информацию о новом пользователе.
     * @throws IllegalArgumentException если пользователь уже существует или если входные данные некорректны.
     */
    void registeredUser(User user);
    /**
     * Аутентификация пользователя по логину и паролю.
     *
     * <p>Метод проверяет введённые логин и пароль и возвращает идентификатор пользователя, если данные корректны.
     * В противном случае возвращает 0, что означает неудачную попытку входа.</p>
     *
     * @param login логин пользователя.
     * @param password пароль пользователя.
     * @return идентификатор пользователя, если аутентификация прошла успешно; 0, если аутентификация не удалась.
     */
    int loginUser(String login, String password);
}
