<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/jdbc
           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- Enable annotation-driven configuration -->
    <context:component-scan base-package="org.example"/>

    <!-- Enable AspectJ auto proxy -->
    <aop:aspectj-autoproxy/>

    <!-- Enable Spring MVC annotations (e.g., @RequestMapping, @RestController) -->
    <mvc:annotation-driven />

    <!-- Bean to handle JSON conversion -->
    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />


    <bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources" value="classpath:application.yaml"/>
    </bean>

    <!-- Define DataSource bean -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="#{yamlProperties['database.driver-class-name']}"/>
        <property name="url" value="#{yamlProperties['database.url']}"/>
        <property name="username" value="#{yamlProperties['database.username']}"/>
        <property name="password" value="#{yamlProperties['database.password']}"/>
    </bean>

    <!-- Define JdbcTemplate bean -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!-- Define NamedParameterJdbcTemplate bean -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!-- Liquibase configuration for database migration -->
    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource" />
        <property name="changeLog" value="db/changelog/changelog-master.xml" />
    </bean>

    

    <!-- Bean definitions for storages -->
    <bean id="carStorage" class="org.example.repository.CarStorage">
        <constructor-arg ref="jdbcTemplate"/>
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="orderStorage" class="org.example.repository.OrderStorage">
        <constructor-arg ref="jdbcTemplate"/>
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="userStorage" class="org.example.repository.UserStorage">
        <constructor-arg ref="jdbcTemplate"/>
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <!-- Bean definitions for services -->
    <bean id="carService" class="org.example.service.CarService">
        <constructor-arg ref="carStorage"/>
        <constructor-arg ref="objectValidator"/>
    </bean>

    <bean id="orderService" class="org.example.service.OrderService">
        <constructor-arg ref="orderStorage"/>
    </bean>

    <bean id="userService" class="org.example.service.UserService">
        <constructor-arg ref="userStorage"/>
    </bean>

    <!-- Aspect Configuration -->
    <bean id="loggingAspect" class="org.example.aop.UserAuditAspect"/>

    <!-- ObjectValidator Bean -->
    <bean id="objectValidator" class="org.example.util.ObjectValidator"/>
</beans>
